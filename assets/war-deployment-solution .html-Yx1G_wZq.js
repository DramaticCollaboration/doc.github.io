import{_ as n,c as a,a as i,o as s}from"./app-DGEuurYf.js";const t={};function o(l,e){return s(),a("div",null,e[0]||(e[0]=[i(`<h1 id="war-deployment-solution" tabindex="-1"><a class="header-anchor" href="#war-deployment-solution"><span>WAR deployment solution</span></a></h1><blockquote><p>Version: 3.5+</p></blockquote><h2 id="formal-environment-deployment" tabindex="-1"><a class="header-anchor" href="#formal-environment-deployment"><span>Formal environment deployment</span></a></h2><blockquote><p>Adopt nginx+tomcat deployment solution.<br> Backend service is published to tomcat.<br> Frontend is deployed to nginx.</p></blockquote><h3 id="_1-backend-project-jeecg-boot-war-package" tabindex="-1"><a class="header-anchor" href="#_1-backend-project-jeecg-boot-war-package"><span>1. Backend project jeecg-boot war package</span></a></h3><h4 id="_1-before-building-the-war-package-for-the-background-project-jeecg-system-start-make-the-following-changes" tabindex="-1"><a class="header-anchor" href="#_1-before-building-the-war-package-for-the-background-project-jeecg-system-start-make-the-following-changes"><span>(1) Before building the war package for the background project jeecg-system-start, make the following changes</span></a></h4><p>1. The project format in the pom.xml file is set to war</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&lt;packaging&gt;war&lt;/packaging&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>The reference configuration is as follows:</p><p>2. Delete the plugin spring-boot-maven-plugin in the pom.xml file and<br> configure the following deletion</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&lt;build&gt;</span>
<span class="line">   &lt;plugins&gt;</span>
<span class="line">	&lt;plugin&gt;</span>
<span class="line">		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span>
<span class="line">		&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span>
<span class="line">	&lt;/plugin&gt;</span>
<span class="line">   &lt;/plugins&gt;</span>
<span class="line">&lt;/build&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><p>3. Comment out the ServerEndpointExporter registration method<br> path of WebSocketConfig:<code>jeecg-boot-base/jeecg-boot-base-core/org.jeecg.config.WebSocketConfig</code></p><p>4. Modify the configuration file application-prod.yml</p><ul><li>a. Modify database connection</li><li>b. Modify cache redis configuration</li><li>c. Modify the upload attachment configuration</li><li>d. Switch to production mode packaging</li></ul><p>First execute the install operation of jeecg-boot-parent<br> Then maven package war package</p><h3 id="_2-deploy-the-background-project-jeecg-boot-to-tomcat" tabindex="-1"><a class="header-anchor" href="#_2-deploy-the-background-project-jeecg-boot-to-tomcat"><span>2. Deploy the background project jeecg-boot to tomcat</span></a></h3><p>1. Set the tomcat port number to 8080 and set the tomcat encoding URIEncoding=&quot;UTF-8&quot;<br> 2. Deploy the project to the tomcat directory webapps/jeecg-boot project directory.<br> After deployment, access the project interface address through <a href="http://localhost:8080/jeecg-boot/doc.html" target="_blank" rel="noopener noreferrer">http://localhost:8080/jeecg-boot/doc.html</a> , indicating that the deployment is successful! !</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">注意：</span>
<span class="line">1.tomcat解压war后的目录名称即你访问的根路径，这里是jeecg-boot</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h3 id="_3-front-end-vue3-project-jeecgboot-vue3build-and-packaging" tabindex="-1"><a class="header-anchor" href="#_3-front-end-vue3-project-jeecgboot-vue3build-and-packaging"><span>3. Front-end Vue3 project <code>jeecgboot-vue3</code>build and packaging</span></a></h3><ul><li>1. Modify the interface address configuration <code>.env.production</code></li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line"># 跨域代理，您可以配置多个 ,请注意，没有换行符</span>
<span class="line">VITE_PROXY = [[&quot;/jeecgboot&quot;,&quot;http://localhost:8080/jeecg-boot&quot;],[&quot;/upload&quot;,&quot;http://localhost:3300/upload&quot;]]</span>
<span class="line"></span>
<span class="line">#后台接口全路径地址(必填)</span>
<span class="line">VITE_GLOB_DOMAIN_URL=http://localhost:8080/jeecg-boot</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><ul><li>2. Build and package<br> Use the build command to package the project</li></ul><p>After the build is completed, a dist directory will be generated.</p><ul><li>3. Nginx deploys the front-end project<br> and copies the code under dist to the html directory under the nginx installation directory.</li></ul><h3 id="_4-nginx-configuration-of-front-end-vue3-project" tabindex="-1"><a class="header-anchor" href="#_4-nginx-configuration-of-front-end-vue3-project"><span>4. Nginx configuration of front-end Vue3 project</span></a></h3><blockquote><p>Solution description: Configure a domain name on the front end and a domain name on the back end, and map them separately through nginx.</p></blockquote><ul><li>Example: Java API service domain name <code>api.boot.jeecg.com</code>is mapped to port 8080 through ngnix</li><li>In the example: vue3 front-end domain name<code>boot.jeecg.com</code></li></ul><blockquote><p>Reminder: Please replace the domain name involved in the configuration <code>api.boot.jeecg.com</code> <code>boot.jeecg.com</code>with your own domain name</p></blockquote><h4 id="front-end-nginx-configuration" tabindex="-1"><a class="header-anchor" href="#front-end-nginx-configuration"><span>Front-end nginx configuration</span></a></h4><ul><li>nginx listens on port 80</li><li>Bind domain name (example): boot.jeecg.com</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">server {</span>
<span class="line">		listen       80;</span>
<span class="line">		server_name  前端访问域名;</span>
<span class="line">		#解决Router(mode: &#39;history&#39;)模式下，刷新路由地址不能找到页面的问题</span>
<span class="line">		location / {</span>
<span class="line">			root   html;</span>
<span class="line">			index  index.html index.htm;</span>
<span class="line">			if (!-e $request_filename) {</span>
<span class="line">				rewrite ^(.*)$ /index.html?s=$1 last;</span>
<span class="line">				break;</span>
<span class="line">			}</span>
<span class="line">		}</span>
<span class="line">	}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h4 id="backend-nginx-configuration" tabindex="-1"><a class="header-anchor" href="#backend-nginx-configuration"><span>Backend nginx configuration</span></a></h4><ul><li>nginx listens on port 80</li><li>Bind domain name (example): api.boot.jeecg.com</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">    upstream api.boot.jeecg.com {</span>
<span class="line">      server 127.0.0.1:8080;</span>
<span class="line">     }</span>
<span class="line"></span>
<span class="line">    server {</span>
<span class="line">        listen       80;</span>
<span class="line">        server_name  api.boot.jeecg.com;</span>
<span class="line">        location / {</span>
<span class="line">            root   html;</span>
<span class="line">            index  index.html index.htm;</span>
<span class="line">			proxy_pass  http://api.boot.jeecg.com;</span>
<span class="line"></span>
<span class="line">			#ip remote_addr</span>
<span class="line">			proxy_set_header X-Forwarded-Scheme  $scheme;</span>
<span class="line">			proxy_redirect    off;</span>
<span class="line">			proxy_set_header  Host             $host;</span>
<span class="line">			proxy_set_header  X-Real-IP        $remote_addr;</span>
<span class="line">			proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;</span>
<span class="line">        }</span>
<span class="line">    }</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><blockquote><p>Reminder: Some versions of nginx configuration require the addition of Upgrade and Connection protocol headers, otherwise WebSocket will fail with 404.</p></blockquote><p>5. Access the application</p><p>Access the project through <code>http://你的前端域名</code>, and the following page will appear, indicating success.<br> Account/password: admin/123456</p>`,43)]))}const r=n(t,[["render",o]]),d=JSON.parse('{"path":"/syncboot/release/war-deployment-solution%20.html","title":"WAR deployment solution","lang":"ko-KR","frontmatter":{"order":7},"git":{"updatedTime":1749179241000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"a96cbbf1f6c96d0e9d6bafa4174131f10429b849","time":1749179241000,"email":"poh@empasy.com","author":"poh","message":"sync 제품군 추가"}]},"filePathRelative":"syncboot/release/war-deployment-solution .md"}');export{r as comp,d as data};
