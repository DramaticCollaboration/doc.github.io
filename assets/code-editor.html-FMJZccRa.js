import{_ as t,c as a,a as d,o as n}from"./app-CC5quYyA.js";const s={};function i(o,e){return n(),a("div",null,e[0]||(e[0]=[d(`<h1 id="codeeditor" tabindex="-1"><a class="header-anchor" href="#codeeditor"><span>CodeEditor</span></a></h1><p>Code Editor</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&lt;template&gt;</span>
<span class="line">  &lt;CodeEditor v-model:value=&quot;value&quot; :mode=&quot;modeValue&quot; /&gt;</span>
<span class="line">&lt;/template&gt;</span>
<span class="line">&lt;script&gt;</span>
<span class="line">  import { defineComponent, ref } from &#39;vue&#39;;</span>
<span class="line">  export default defineComponent({</span>
<span class="line">    components: { CodeEditor },</span>
<span class="line">    setup() {</span>
<span class="line">      const modeValue = ref(&#39;application/json&#39;);</span>
<span class="line">      return { value, modeValue };</span>
<span class="line">    },</span>
<span class="line">  });</span>
<span class="line">&lt;/script&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props"><span>Props</span></a></h2><table><thead><tr><th>Attributes</th><th>type</th><th>default value</th><th>Optional Values</th><th>illustrate</th></tr></thead><tbody><tr><td>value(v-model)</td><td><code>any</code></td><td>-</td><td>-</td><td>Binding Values</td></tr><tr><td>mode</td><td><code>string</code></td><td><code>application/json</code></td><td><code>&#39;application/json&#39;</code>,<code>&#39;htmlmixed&#39;</code>,<code>&#39;javascript&#39;</code></td><td>Code Type</td></tr><tr><td>readonly</td><td><code>boolean</code></td><td>-</td><td>-</td><td>Read-only</td></tr><tr><td>placeholder</td><td><code>string</code></td><td>-</td><td>-</td><td>Placeholder</td></tr></tbody></table>`,7)]))}const r=t(s,[["render",i]]),c=JSON.parse('{"path":"/syncadmin/ui-component-library/more-basic-components/code-editor.html","title":"CodeEditor","lang":"ko-KR","frontmatter":{"order":6},"git":{"updatedTime":1749510202000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"e8d2845a48d72a49b99a62ed0e9511823ff14831","time":1749510202000,"email":"poh@empasy.com","author":"poh","message":"로고 alt text 변경"}]},"filePathRelative":"syncadmin/ui-component-library/more-basic-components/code-editor.md"}');export{r as comp,c as data};
