import{_ as s,c as a,a as n,o as i}from"./app-CJlkTddN.js";const o={};function t(r,e){return i(),a("div",null,e[0]||(e[0]=[n(`<h1 id="disable-controls-✔" tabindex="-1"><a class="header-anchor" href="#disable-controls-✔"><span>Disable controls ✔</span></a></h1><blockquote><p>Form disabling control can be achieved by the following methods</p></blockquote><h2 id="_1-usage" tabindex="-1"><a class="header-anchor" href="#_1-usage"><span>1. Usage:</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">import { usePermission } from &#39;/@/hooks/web/usePermission&#39;;</span>
<span class="line">const { isDisabledAuth} = usePermission();</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><p>The isDisabledAuth function receives the background permission code and can pass the array isDisabledAuth([&#39;user &#39;])</p><h3 id="control-in-baseform" tabindex="-1"><a class="header-anchor" href="#control-in-baseform"><span>Control in BaseForm</span></a></h3><ul><li><strong>Dynamically determine whether the current component is disabled through <a href="https://vvbin.cn/doc-next/components/form.html#formschema" target="_blank" rel="noopener noreferrer">dynamicDisabled</a></strong><br> as shown in the following code</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">{</span>
<span class="line">  field: &#39;field3&#39;,</span>
<span class="line">  component: &#39;DatePicker&#39;,</span>
<span class="line">  label: &#39;字段3&#39;,</span>
<span class="line">  dynamicDisabled: ({ values }) =&gt; {</span>
<span class="line">     return isDisabledAuth(&#39;user:add&#39;);</span>
<span class="line">  },</span>
<span class="line">},</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h3 id="control-in-individual-components" tabindex="-1"><a class="header-anchor" href="#control-in-individual-components"><span>Control in individual components</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&lt;a-checkbox :disabled=&quot;isDisabledAuth(&#39;user:add&#39;)&quot;&gt;&lt;/a-checkbox&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><h2 id="_2-permission-configuration" tabindex="-1"><a class="header-anchor" href="#_2-permission-configuration"><span>2. Permission configuration:</span></a></h2><h3 id="_1-configure-buttons-permissions" tabindex="-1"><a class="header-anchor" href="#_1-configure-buttons-permissions"><span>1. Configure buttons/permissions</span></a></h3><p><img src="https://lfs.k.topthink.com/lfs/db07fa3bd646c5aeb5fa91033c357db45bd16433de9c4002698bde68cf0bee8d.dat" alt=""></p><h3 id="_2-role-authorization" tabindex="-1"><a class="header-anchor" href="#_2-role-authorization"><span>2. Role authorization</span></a></h3><p><img src="https://lfs.k.topthink.com/lfs/11727b7f481fd56361c10fd4081eff96250aae6e021f950fc24cd463da5ce9b2.dat" alt=""></p><h4 id="_3-instructions" tabindex="-1"><a class="header-anchor" href="#_3-instructions"><span>3. Instructions</span></a></h4><ol><li><code>:disabled=&quot;isDisabledAuth(&#39;user:add&#39;)&quot;</code> Call the disabledAuth method, the method parameter <code>user:add</code>is the authorization ID, the method returns true/false according to the authorization rule to control whether to disable</li><li>Permission coding is configured in [System Management--Menu Management], add menu data of button type, configure the authorization identifier value <code>user:add</code>, select editable for policy, and select valid for status</li></ol><h4 id="control-rules" tabindex="-1"><a class="header-anchor" href="#control-rules"><span>Control rules:</span></a></h4><ul><li>If there is no configuration for the corresponding command code in the menu permissions, no disable control will be performed.</li><li>Policy: Editable, controls disabled when not authorized, editable after authorization</li></ul><h2 id="_4-page-effect" tabindex="-1"><a class="header-anchor" href="#_4-page-effect"><span>4. Page Effect</span></a></h2><p>Role permissions are not configured<br><img src="https://lfs.k.topthink.com/lfs/85450044627c707df1abe57cbf4993fb2d0887cdd98a14e2761cd72b7f00edb0.dat" alt=""></p><p>Configuring role permissions<br><img src="https://lfs.k.topthink.com/lfs/fb3e7b8a704deb04091a4c3462c30ea7e1e1fd494680c55f2db1a9c3af076d3d.dat" alt=""></p>`,25)]))}const d=s(o,[["render",t]]),c=JSON.parse('{"path":"/syncadmin/front-end-permissions/form-permissions/disable-controls.html","title":"Disable controls ✔","lang":"ko-KR","frontmatter":{"order":3},"git":{"updatedTime":1749179241000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"a96cbbf1f6c96d0e9d6bafa4174131f10429b849","time":1749179241000,"email":"poh@empasy.com","author":"poh","message":"sync 제품군 추가"}]},"filePathRelative":"syncadmin/front-end-permissions/form-permissions/disable-controls.md"}');export{d as comp,c as data};
