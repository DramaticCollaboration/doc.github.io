import{_ as n,c as s,a,o as i}from"./app-DeddRHAy.js";const t={};function l(r,e){return i(),s("div",null,e[0]||(e[0]=[a(`<h1 id="flyway-사용하기" tabindex="-1"><a class="header-anchor" href="#flyway-사용하기"><span>flyway 사용하기</span></a></h1><blockquote><p><strong>Flyway configuration:</strong> This chapter mainly describes the configuration of flyway</p></blockquote><h3 id="_1-configuration-instructions" tabindex="-1"><a class="header-anchor" href="#_1-configuration-instructions"><span>1. Configuration Instructions</span></a></h3><p>Add springboot configuration and add the following to the application.yml/application.properties configuration file:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">spring:</span>
<span class="line">  # flyway配置</span>
<span class="line">  flyway:</span>
<span class="line">    # 是否启用flyway</span>
<span class="line">    enabled: true</span>
<span class="line">    # 编码格式，默认UTF-8</span>
<span class="line">    encoding: UTF-8</span>
<span class="line">    # 迁移sql脚本文件存放路径，官方默认db/migration</span>
<span class="line">    locations: classpath:flyway/sql/mysql</span>
<span class="line">    # 迁移sql脚本文件名称的前缀，默认V</span>
<span class="line">    sql-migration-prefix: V</span>
<span class="line">    # 迁移sql脚本文件名称的分隔符，默认2个下划线__</span>
<span class="line">    sql-migration-separator: __</span>
<span class="line">    # 避免带\${}sql执行失败</span>
<span class="line">    placeholder-prefix: &#39;#(&#39;</span>
<span class="line">    placeholder-suffix: )</span>
<span class="line">    # 迁移sql脚本文件名称的后缀</span>
<span class="line">    sql-migration-suffixes: .sql</span>
<span class="line">   # 迁移时是否进行校验，默认true</span>
<span class="line">    validate-on-migrate: true</span>
<span class="line">    # 当迁移发现数据库非空且存在没有元数据的表时，自动执行基准迁移，新建schema_version表</span>
<span class="line">    baseline-on-migrate: true</span>
<span class="line">    # 是否关闭要清除已有库下的表功能,生产环境必须为true,否则会删库</span>
<span class="line">    clean-disabled: true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h3 id="_2-insert-the-sql-script-according-to-the-script-naming-specification-and-start-the-project" tabindex="-1"><a class="header-anchor" href="#_2-insert-the-sql-script-according-to-the-script-naming-specification-and-start-the-project"><span>2. Insert the SQL script according to the script naming specification and start the project</span></a></h3><p>Create a sql file for the changed SQL script according to the script naming specification (described below), place it in the flyway/sql/mysql directory (configurable), and start the project; after the project is started, the system will automatically create the flyway_schema_history table, execute the SQL change script, and insert the script execution record into the table.</p><h4 id="script-naming" tabindex="-1"><a class="header-anchor" href="#script-naming"><span>Script naming</span></a></h4><p>1. The SQL name that needs to be executed only once starts with a capital &quot;V&quot;, followed by a combination of numbers from &quot;0 to 9&quot;. The numbers can be separated by &quot;.&quot; or underscore &quot;_&quot;, and then separated by <strong>two underscores</strong> , followed by the file name, and finally ends with .sql</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">V[年月日]_[序号]__[模块名缩写]_[操作类型]_[业务描述].sql</span>
<span class="line">例如：</span>
<span class="line">V20240104_1__easyoa_add_field_attendance.sql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><p>2. Repeatable SQL starts with a capital &quot;R&quot;, followed by <strong>two underscores</strong> , and then the file name.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">R__[模块名缩写]_[业务描述].sql</span>
<span class="line">例如：</span>
<span class="line">R__easyoa_update_user.sql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><blockquote><p>1. The version number must be unique, otherwise Flyway will report an error; if the V__ script.sql has been executed, the content cannot be modified, and Flyway will report an error when it is executed again.<br> 2. The script.sql starting with R allows the script content to be modified, and if there are changes, it can be executed multiple times.<br> 3. The execution priority of SQL starting with V is higher than that of SQL starting with R.</p></blockquote><h3 id="_3-support-scope" tabindex="-1"><a class="header-anchor" href="#_3-support-scope"><span>3. Support Scope</span></a></h3><p>The flyway currently introduced in the project is version 7.15.0, which supports MYSQL5.7 and above</p><p>If you need to support MySQL 5.6, you can downgrade to version 5.2.1</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line"> &lt;dependency&gt;</span>
<span class="line">    &lt;groupId&gt;org.flywaydb&lt;/groupId&gt;</span>
<span class="line">    &lt;artifactId&gt;flyway-core&lt;/artifactId&gt;</span>
<span class="line">    &lt;version&gt;5.2.1&lt;/version&gt;</span>
<span class="line">  &lt;/dependency&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><ul><li>Error: Caused by: java.sql.SQLException: sql injection violation, dbType mysql, druid-version 1.2.19, comment not allow:<br> Solution:</li></ul>`,22)]))}const o=n(t,[["render",l]]),p=JSON.parse('{"path":"/syncboot/upgrade/use-flyway.html","title":"flyway 사용하기","lang":"ko-KR","frontmatter":{"order":3},"git":{"updatedTime":1749180812000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":2,"url":"https://github.com/poh"}],"changelog":[{"hash":"20b98cdb6387988697c03a19f00e0a40c0f2e492","time":1749180812000,"email":"poh@empasy.com","author":"poh","message":"이미지 오류 수정"},{"hash":"a96cbbf1f6c96d0e9d6bafa4174131f10429b849","time":1749179241000,"email":"poh@empasy.com","author":"poh","message":"sync 제품군 추가"}]},"filePathRelative":"syncboot/upgrade/use-flyway.md"}');export{o as comp,p as data};
