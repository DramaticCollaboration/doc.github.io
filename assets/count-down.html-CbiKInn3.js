import{_ as n,c as e,a as s,o as a}from"./app-CU20V-HQ.js";const d={};function o(i,t){return a(),e("div",null,t[0]||(t[0]=[s(`<h1 id="countdown" tabindex="-1"><a class="header-anchor" href="#countdown"><span>CountDown</span></a></h1><p>Countdown component</p><h2 id="countbutton" tabindex="-1"><a class="header-anchor" href="#countbutton"><span>CountButton</span></a></h2><p>Countdown Button Component</p><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&lt;template&gt;</span>
<span class="line">  &lt;CountButton /&gt;</span>
<span class="line">&lt;/template&gt;</span>
<span class="line">&lt;script lang=&quot;ts&quot;&gt;</span>
<span class="line">  import { defineComponent } from &#39;vue&#39;;</span>
<span class="line">  import { CountButton } from &#39;/@/components/CountDown&#39;;</span>
<span class="line"></span>
<span class="line">  export default defineComponent({</span>
<span class="line">    components: { CountButton },</span>
<span class="line">  });</span>
<span class="line">&lt;/script&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h3 id="props" tabindex="-1"><a class="header-anchor" href="#props"><span>Props</span></a></h3><table><thead><tr><th>Attributes</th><th>type</th><th>default value</th><th>Optional Values</th><th>illustrate</th></tr></thead><tbody><tr><td>value</td><td><code>any</code></td><td>-</td><td>-</td><td>Binding Values</td></tr><tr><td>count</td><td><code>number</code></td><td><code>60</code></td><td>-</td><td>Countdown time</td></tr><tr><td>beforeStartFunc</td><td><code>()=&gt;promise</code></td><td>-</td><td>-</td><td>The function executed before the countdown will start executing only if it returns true</td></tr></tbody></table><h2 id="countdowninput" tabindex="-1"><a class="header-anchor" href="#countdowninput"><span>CountDownInput</span></a></h2><p>Countdown input box button component</p><h3 id="usage-1" tabindex="-1"><a class="header-anchor" href="#usage-1"><span>Usage</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&lt;template&gt;</span>
<span class="line">  &lt;CountdownInput /&gt;</span>
<span class="line">&lt;/template&gt;</span>
<span class="line">&lt;script lang=&quot;ts&quot;&gt;</span>
<span class="line">  import { defineComponent } from &#39;vue&#39;;</span>
<span class="line">  import { CountdownInput } from &#39;/@/components/CountDown&#39;;</span>
<span class="line"></span>
<span class="line">  export default defineComponent({</span>
<span class="line">    components: { CountdownInput },</span>
<span class="line">  });</span>
<span class="line">&lt;/script&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h3 id="props-1" tabindex="-1"><a class="header-anchor" href="#props-1"><span>Props</span></a></h3><table><thead><tr><th>Attributes</th><th>type</th><th>default value</th><th>Optional Values</th><th>illustrate</th></tr></thead><tbody><tr><td>value</td><td><code>any</code></td><td>-</td><td>-</td><td>Binding Values</td></tr><tr><td>size</td><td><code>string</code></td><td><code>&#39;default&#39;, &#39;large&#39;, &#39;small&#39;</code></td><td>-</td><td>Input box is button size</td></tr><tr><td>count</td><td><code>number</code></td><td><code>60</code></td><td>-</td><td>Countdown time</td></tr><tr><td>sendCodeApi</td><td><code>()=&gt;promise</code></td><td>-</td><td>-</td><td>The function executed before the countdown will start executing only if it returns true</td></tr></tbody></table>`,16)]))}const c=n(d,[["render",o]]),r=JSON.parse('{"path":"/syncadmin/ui-component-library/more-basic-components/count-down.html","title":"CountDown","lang":"ko-KR","frontmatter":{"order":9},"git":{"updatedTime":1749507909000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"b750c3240053572cbcbb08ac1e9cd0bd9974af53","time":1749507909000,"email":"poh@empasy.com","author":"poh","message":"build to docs:build"}]},"filePathRelative":"syncadmin/ui-component-library/more-basic-components/count-down.md"}');export{c as comp,r as data};
