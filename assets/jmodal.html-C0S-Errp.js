import{_ as e,c as d,a as n,o as s}from"./app-CJlkTddN.js";const a={};function l(r,t){return s(),d("div",null,t[0]||(t[0]=[n(`<h1 id="jmodal" tabindex="-1"><a class="header-anchor" href="#jmodal"><span>JModal</span></a></h1><blockquote><p>JModal: native a-modal encapsulation, supports all features of a-modal</p></blockquote><h2 id="parameter-configuration" tabindex="-1"><a class="header-anchor" href="#parameter-configuration"><span>Parameter configuration</span></a></h2><table><thead><tr><th>parameter</th><th>type</th><th>Required</th><th>illustrate</th></tr></thead><tbody><tr><td>fullscreen</td><td>boolean</td><td>Not required</td><td>Whether to use full screen by default</td></tr><tr><td>canFullscreen</td><td>boolean</td><td>Not required</td><td>Whether to display the full screen button</td></tr><tr><td>afterClose</td><td>function</td><td>Not required</td><td>Modal callback after it is completely closed</td></tr><tr><td>bodyStyle</td><td>object</td><td>Not required</td><td>Modal body style</td></tr><tr><td>cancelButtonProps</td><td>ButtonProps</td><td>Not required</td><td>cancel button props</td></tr><tr><td>centered</td><td>boolean</td><td>Not required</td><td>Display Modal vertically in the center</td></tr><tr><td>closable</td><td>boolean</td><td>Not required</td><td>Whether to display the close button in the upper right corner</td></tr><tr><td>closeIcon</td><td>slot</td><td>Not required</td><td>Custom close icon</td></tr><tr><td>confirmLoading</td><td>boolean</td><td>Not required</td><td>Confirm button loading</td></tr><tr><td>destroyOnClose</td><td>boolean</td><td>Not required</td><td>Destroy the sub-elements in Modal when closing</td></tr><tr><td>footer</td><td>string</td><td>slot</td><td>Not required</td></tr><tr><td>forceRender</td><td>boolean</td><td>Not required</td><td>Force rendering Modal</td></tr><tr><td>getContainer</td><td>(instance): HTMLElement</td><td>Not required</td><td>Specify the HTML node where the Modal is mounted</td></tr><tr><td>keyboard</td><td>boolean</td><td>Not required</td><td>Whether to support keyboard esc close</td></tr><tr><td>mask</td><td>boolean</td><td>Not required</td><td>Whether to display the mask</td></tr><tr><td>maskClosable</td><td>boolean</td><td>Not required</td><td>Click on the mask to allow closing</td></tr><tr><td>maskStyle</td><td>object</td><td>Not required</td><td>Mask Style</td></tr><tr><td>okButtonProps</td><td>ButtonProps</td><td>Not required</td><td>ok button props</td></tr><tr><td>okText</td><td>string</td><td>slot</td><td>Not required</td></tr><tr><td>cancelText</td><td>string</td><td>slot</td><td>Not required</td></tr><tr><td>okType</td><td>string</td><td>Not required</td><td>Confirm button type</td></tr><tr><td>title</td><td>string</td><td>Not required</td><td>title</td></tr><tr><td>open</td><td>boolean</td><td>Not required</td><td>Is the dialog box visible?</td></tr><tr><td>width</td><td>string</td><td>number</td><td>Not required</td></tr><tr><td>wrapClassName</td><td>string</td><td>Not required</td><td>The class name of the dialog&#39;s outer container</td></tr></tbody></table><p>For more property events, see <a href="https://www.antdv.com/components/modal-cn#api" target="_blank" rel="noopener noreferrer">Modal</a></p><h2 id="show-results" tabindex="-1"><a class="header-anchor" href="#show-results"><span>Show results</span></a></h2><p><img src="https://lfs.k.topthink.com/lfs/bb14e97d40c9118845cdad73c8c089ad5183de7c842fafc13f896068c67f1d4c.dat" alt=""></p><h2 id="usage-examples" tabindex="-1"><a class="header-anchor" href="#usage-examples"><span>Usage Examples</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&lt;template&gt;</span>
<span class="line">  &lt;JModal :title=&quot;title&quot; :width=&quot;width&quot; v-model:open=&quot;visible&quot; @ok=&quot;handleOk&quot; :okButtonProps=&quot;{ class: { &#39;jee-hidden&#39;: disableSubmit } }&quot; @cancel=&quot;handleCancel&quot; cancelText=&quot;关闭&quot;&gt;</span>
<span class="line">  &lt;/JModal&gt;</span>
<span class="line">&lt;/template&gt;</span>
<span class="line"></span>
<span class="line">&lt;script lang=&quot;ts&quot; setup&gt;</span>
<span class="line">  import { ref } from &#39;vue&#39;;</span>
<span class="line">  import JModal from &#39;/@/components/Modal/src/JModal/JModal.vue&#39;;</span>
<span class="line"></span>
<span class="line">  const title = ref&lt;string&gt;(&#39;&#39;);</span>
<span class="line">  const width = ref&lt;number&gt;(800);</span>
<span class="line">  const visible = ref&lt;boolean&gt;(false);</span>
<span class="line">  const disableSubmit = ref&lt;boolean&gt;(false);</span>
<span class="line"></span>
<span class="line">  /**</span>
<span class="line">   * 确定按钮点击事件</span>
<span class="line">   */</span>
<span class="line">  function handleOk() {}</span>
<span class="line"></span>
<span class="line">  /**</span>
<span class="line">   * 取消按钮回调事件</span>
<span class="line">   */</span>
<span class="line">  function handleCancel() {</span>
<span class="line">    visible.value = false;</span>
<span class="line">  }</span>
<span class="line">&lt;/script&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p>`,10)]))}const i=e(a,[["render",l]]),c=JSON.parse('{"path":"/syncadmin/ui-component-library/jmodal.html","title":"JModal","lang":"ko-KR","frontmatter":{"order":41},"git":{"updatedTime":1749179241000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"a96cbbf1f6c96d0e9d6bafa4174131f10429b849","time":1749179241000,"email":"poh@empasy.com","author":"poh","message":"sync 제품군 추가"}]},"filePathRelative":"syncadmin/ui-component-library/jmodal.md"}');export{i as comp,c as data};
