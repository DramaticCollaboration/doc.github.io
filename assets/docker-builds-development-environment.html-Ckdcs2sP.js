import{_ as n,c as s,a,o as r}from"./app-QFoJTndn.js";const i={};function t(l,e){return r(),s("div",null,e[0]||(e[0]=[a(`<h1 id="docker-builds-a-development-environment" tabindex="-1"><a class="header-anchor" href="#docker-builds-a-development-environment"><span>Docker builds a development environment</span></a></h1><h3 id="docker-builds-a-development-environment-1" tabindex="-1"><a class="header-anchor" href="#docker-builds-a-development-environment-1"><span>Docker builds a development environment</span></a></h3><ul><li><a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows" target="_blank" rel="noopener noreferrer">Docker-desktop download</a></li><li><a href="https://my.oschina.net/jeecg/blog/4283700" target="_blank" rel="noopener noreferrer">Install MySQL 5.7 with Docker</a></li><li><a href="https://www.runoob.com/docker/docker-install-redis.html" target="_blank" rel="noopener noreferrer">Install Redis on Docker</a></li><li><a href="https://blog.csdn.net/weixin_39305029/article/details/105014150" target="_blank" rel="noopener noreferrer">Docker switches to Chinese mirror source</a></li><li><a href="http://doc.jeecg.com/2242817" target="_blank" rel="noopener noreferrer">Docker 安装Elasticsearch</a></li></ul><p>Enter the database</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">mysql -u root -p</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>Create a database</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">create database \`jeecg-boot\` default character set utf8mb4 collate utf8mb4_general_ci;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><h5 id="docker-engine-configuration" tabindex="-1"><a class="header-anchor" href="#docker-engine-configuration"><span>Docker Engine Configuration</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">{</span>
<span class="line">  &quot;registry-mirrors&quot;: [</span>
<span class="line">    &quot;https://registry.docker-cn.com&quot;,</span>
<span class="line">    &quot;http://hub-mirror.c.163.com&quot;,</span>
<span class="line">    &quot;https://docker.mirrors.ustc.edu.cn&quot;</span>
<span class="line">  ],</span>
<span class="line">  &quot;insecure-registries&quot;: [],</span>
<span class="line">  &quot;debug&quot;: false,</span>
<span class="line">  &quot;experimental&quot;: false,</span>
<span class="line">  &quot;features&quot;: {</span>
<span class="line">    &quot;buildkit&quot;: true</span>
<span class="line">  }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p>`,12)]))}const c=n(i,[["render",t]]),d=JSON.parse('{"path":"/syncboot/docker/docker-builds-development-environment.html","title":"Docker builds a development environment","lang":"ko-KR","frontmatter":{"order":8},"git":{"updatedTime":1749179241000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"a96cbbf1f6c96d0e9d6bafa4174131f10429b849","time":1749179241000,"email":"poh@empasy.com","author":"poh","message":"sync 제품군 추가"}]},"filePathRelative":"syncboot/docker/docker-builds-development-environment.md"}');export{c as comp,d as data};
