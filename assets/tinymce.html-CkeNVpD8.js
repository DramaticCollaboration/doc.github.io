import{_ as t,c as n,a as s,o as a}from"./app-CU20V-HQ.js";const i={};function d(l,e){return a(),n("div",null,e[0]||(e[0]=[s(`<h1 id="tinymce" tabindex="-1"><a class="header-anchor" href="#tinymce"><span>Tinymce</span></a></h1><p>The rich text component is located in <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/components/Tinymce" target="_blank" rel="noopener noreferrer">src/components/TinyMce</a></p><div class="hint-container tip"><p class="hint-container-title">The rich text component is imported using CDN</p><p>You can change the following CDN address in <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/components/Tinymce/src/Editor.vue" target="_blank" rel="noopener noreferrer">/@/components/TinyMce/src/Editor.vue</a></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">const CDN_URL = &#39;https://cdn.bootcdn.net/ajax/libs/tinymce/5.5.1&#39;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&lt;template&gt;</span>
<span class="line">  &lt;Tinymce v-model=&quot;value&quot; @change=&quot;handleChange&quot; width=&quot;100%&quot; /&gt;</span>
<span class="line">&lt;/template&gt;</span>
<span class="line">&lt;script lang=&quot;ts&quot;&gt;</span>
<span class="line">  import { defineComponent, ref } from &#39;vue&#39;;</span>
<span class="line">  import { Tinymce } from &#39;/@/components/Tinymce/index&#39;;</span>
<span class="line"></span>
<span class="line">  export default defineComponent({</span>
<span class="line">    components: { Tinymce },</span>
<span class="line">    setup() {</span>
<span class="line">      const value = ref(&#39;hello world!&#39;);</span>
<span class="line">      function handleChange(value: string) {</span>
<span class="line">        console.log(value);</span>
<span class="line">      }</span>
<span class="line">      return { handleChange, value };</span>
<span class="line">    },</span>
<span class="line">  });</span>
<span class="line">&lt;/script&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props"><span>Props</span></a></h2><table><thead><tr><th>Attributes</th><th>type</th><th>default value</th><th>illustrate</th></tr></thead><tbody><tr><td>options</td><td><code>any</code></td><td>{}</td><td>Configuration items of tinymce</td></tr><tr><td>value(v-model)</td><td><code>string</code></td><td>-</td><td>Two-way binding value</td></tr><tr><td>height</td><td><code>number , string</code></td><td>400</td><td>high</td></tr><tr><td>width</td><td><code>number , string</code></td><td>auto</td><td>width</td></tr><tr><td>toolbar</td><td><code>string[]</code></td><td>-</td><td>toolbar</td></tr><tr><td>plugins</td><td><code>string[]</code></td><td>-</td><td>Plugins</td></tr><tr><td>showImageUpload</td><td><code>boolean</code></td><td>true</td><td>Whether to display the upload button</td></tr></tbody></table><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events"><span>Events</span></a></h2><table><thead><tr><th>event</th><th>Callback parameters</th><th>return value</th><th>illustrate</th></tr></thead><tbody><tr><td>change</td><td><code>(str:string)=&gt;{}</code></td><td></td><td>Rich text content changes trigger event</td></tr></tbody></table>`,10)]))}const c=t(i,[["render",d]]),o=JSON.parse('{"path":"/syncadmin/ui-component-library/more-basic-components/tinymce.html","title":"Tinymce","lang":"ko-KR","frontmatter":{"order":21},"git":{"updatedTime":1749507909000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"b750c3240053572cbcbb08ac1e9cd0bd9974af53","time":1749507909000,"email":"poh@empasy.com","author":"poh","message":"build to docs:build"}]},"filePathRelative":"syncadmin/ui-component-library/more-basic-components/tinymce.md"}');export{c as comp,o as data};
