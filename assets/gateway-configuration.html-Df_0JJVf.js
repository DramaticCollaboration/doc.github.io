import{_ as s,c as i,a as o,b as a,e as t,d as r,w as d,r as l,o as c}from"./app-CJlkTddN.js";const p={};function u(f,e){const n=l("RouteLink");return c(),i("div",null,[e[9]||(e[9]=o('<h1 id="gateway-configuration" tabindex="-1"><a class="header-anchor" href="#gateway-configuration"><span>Gateway configuration</span></a></h1><h2 id="default-gateway-usage" tabindex="-1"><a class="header-anchor" href="#default-gateway-usage"><span>Default Gateway Usage</span></a></h2><p>The default <code>database数据库</code>mode for SyncBoot routing loading is the routing configured through the menu.</p><p><img src="https://lfs.k.topthink.com/lfs/cae0a47ef4240bf9c8a68ceab9c80faac99e692fbf86b4fc59353617297f347b.dat" alt=""></p><p><img src="https://lfs.k.topthink.com/lfs/cea875f9784dd90788847232c376a5368de5814657003081828c3c4ed21a1c9c.dat" alt=""></p><h2 id="other-uses-of-the-gateway" tabindex="-1"><a class="header-anchor" href="#other-uses-of-the-gateway"><span>Other uses of the gateway</span></a></h2>',6)),a("p",null,[e[1]||(e[1]=t("SyncBoot supports three modes of route loading: ")),e[2]||(e[2]=a("code",null,"数据库",-1)),e[3]||(e[3]=t()),e[4]||(e[4]=a("code",null,"yml",-1)),e[5]||(e[5]=t()),e[6]||(e[6]=a("code",null,"nacos",-1)),e[7]||(e[7]=a("br",null,null,-1)),e[8]||(e[8]=t(" If you want to use other methods, please see the document ")),r(n,{to:"/syncboot/microservice/microservice-components/gateway.html"},{default:d(()=>e[0]||(e[0]=[t("Gateway Advanced Configuration Usage")])),_:1})]),e[10]||(e[10]=o(`<h2 id="gateway-shutdown-knife4j-interface-documentation" tabindex="-1"><a class="header-anchor" href="#gateway-shutdown-knife4j-interface-documentation"><span>Gateway shutdown knife4j interface documentation</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">knife4j:</span>
<span class="line">  production: true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><p><img src="https://lfs.k.topthink.com/lfs/f3920d7631e961368a14ab43241f6a902a8f470848d6436a0ef0c95b641bb68d.dat" alt=""></p>`,4))])}const h=s(p,[["render",u]]),g=JSON.parse('{"path":"/syncboot/microservice/microservice-components/gateway-configuration.html","title":"Gateway configuration","lang":"ko-KR","frontmatter":{"order":2},"git":{"updatedTime":1749179241000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"a96cbbf1f6c96d0e9d6bafa4174131f10429b849","time":1749179241000,"email":"poh@empasy.com","author":"poh","message":"sync 제품군 추가"}]},"filePathRelative":"syncboot/microservice/microservice-components/gateway-configuration.md"}');export{h as comp,g as data};
