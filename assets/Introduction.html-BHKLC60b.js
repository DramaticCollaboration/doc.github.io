import{_ as a,c as r,a as i,b as t,e as n,d as s,w as l,r as c,o as d}from"./app-CGhJnnYK.js";const p={};function h(m,e){const o=c("RouteLink");return d(),r("div",null,[e[2]||(e[2]=i('<h1 id="소개" tabindex="-1"><a class="header-anchor" href="#소개"><span>소개</span></a></h1><p><code>SyncBoot</code>It is a development platform based on code generator <code>Low Code</code>, zero-code development! It adopts front-end and back-end separation architecture: SpringBoot2.x, Ant Design&amp;Vue, Mybatis-plus, Shiro, JWT. The powerful code generator allows the front-end and back-end codes to be generated with one click, without writing any code! SyncBoot leads a new development mode (Online Coding mode -&gt; Code generator mode -&gt; Manual MERGE intelligent development), helping to solve 70% of the repetitive work in Java projects, allowing developers to focus more on business logic. It can not only quickly improve development efficiency and help companies save costs, but also without losing flexibility! SyncBoot also created an original online development mode (No-Code concept): online form configuration (form designer), mobile configuration capabilities, workflow configuration (online design process), report configuration capabilities, online chart configuration, plug-in capabilities (pluggable), etc.!</p><p><code>SyncBoot Improving UI capabilities</code>At the same time, it reduces the development cost of front-end and back-end separation. SyncBoot also created an original online development mode (No-Code concept), a series of online intelligent development: online configuration forms, online configuration reports, online chart design, online design processes, etc.</p><p><code>SYNC Motivation:</code>Simple functions are implemented by Online Coding configuration (online configuration form, online configuration report, online chart design, online design process, online design form), and complex functions are generated by the code generator and manually merged, which ensures both intelligence and flexibility;</p><p>The business process is implemented by workflow and task interface is extended for the development of business logic. The form provides multiple solutions: form designer, online configuration form, coded form. At the same time, the separation design of process and form (loose coupling) is realized, and flexible configuration of task nodes is supported, which not only ensures the confidentiality of the company&#39;s process, but also reduces the workload of developers.</p><h2 id="technical-support" tabindex="-1"><a class="header-anchor" href="#technical-support"><span>Technical Support</span></a></h2>',6)),t("ul",null,[t("li",null,[e[1]||(e[1]=n("Beginner's Guide: ")),s(o,{to:"/syncboot/getting-started.html"},{default:l(()=>e[0]||(e[0]=[n("Quick Start")])),_:1})])]),e[3]||(e[3]=i('<h2 id="technical-architecture" tabindex="-1"><a class="header-anchor" href="#technical-architecture"><span>Technical Architecture</span></a></h2><hr><h4 id="벡엔드" tabindex="-1"><a class="header-anchor" href="#벡엔드"><span>벡엔드</span></a></h4><ul><li>IDE recommendation: IDEA (the lombok plugin must be installed)</li><li>Language: Java 8+ (supports 17)</li><li>Dependency Management: Maven</li><li>Basic framework: Spring Boot 2.7.18</li><li>Microservice framework: Spring Cloud Alibaba 2021.0.1.0</li><li>Persistence layer framework: MybatisPlus 3.5.3.2</li><li>Reporting tool: JimuReport 1.7.6</li><li>Security framework: Apache Shiro 1.12.0, Jwt 3.11.0</li><li>Microservice technology stack: Spring Cloud Alibaba, Nacos, Gateway, Sentinel, Skywalking</li><li>Database connection pool: Alibaba Druid 1.1.22</li><li>Log printing: logback</li><li>Cache: Redis</li><li>Others: autopoi, fastjson, poi, Swagger-ui, quartz, lombok (simplified code), etc.</li><li>Default database script: MySQL5.7+</li><li><a href="https://my.oschina.net/jeecg/blog/4905722" target="_blank" rel="noopener noreferrer">Other databases need to be transferred by themselves</a></li></ul><h4 id="관리-콘솔-개발" tabindex="-1"><a class="header-anchor" href="#관리-콘솔-개발"><span>관리 콘솔 개발</span></a></h4><ul><li>IDE recommendations: WebStorm, Vscode</li><li>Adopt new technology solutions such as Vue3.0+TypeScript+Vite+Ant-Design-Vue, including secondary encapsulation components, utils, hooks, dynamic menus, permission verification, button-level permission control and other functions</li><li>The latest technology stack: Vue3.0 + TypeScript + Vite5 + ant-design-vue4 + pinia + echarts + unocss + vxe-table + qiankun + es6</li><li>Dependency management: node, npm, pnpm</li></ul><h4 id="support-library" tabindex="-1"><a class="header-anchor" href="#support-library"><span>Support Library</span></a></h4><table><thead><tr><th>database</th><th>support</th></tr></thead><tbody><tr><td>MySQL</td><td>√</td></tr><tr><td>Oracle11g</td><td>√</td></tr><tr><td>Sqlserver2017</td><td>√</td></tr><tr><td>PostgreSQL</td><td>√</td></tr><tr><td>MariaDB</td><td>√</td></tr><tr><td>DAMO</td><td>√</td></tr><tr><td>Renmin University of China</td><td>√</td></tr></tbody></table><h2 id="microservices-solutions" tabindex="-1"><a class="header-anchor" href="#microservices-solutions"><span>Microservices Solutions</span></a></h2><ol><li>Service registration and discovery Nacos √</li><li>Unified Configuration Center Nacos √</li><li>Routing gateway (three loading methods) √</li><li>Distributed http feign √</li><li>Circuit Breaker, Downgrade, and Current Limiting Sentinel √</li><li>Distributed file Minio, Alibaba OSS √</li><li>Unified permission control JWT + Shiro √</li><li>Service monitoring SpringBootAdmin√</li><li>Link Tracking Skywalking <a href="https://help.jeecg.com/java/springcloud/super/skywarking.html" target="_blank" rel="noopener noreferrer">Reference Document</a></li><li>Message middleware RabbitMQ √</li><li>Distributed tasks xxl-job √</li><li>Distributed Transaction Seata</li><li>Lightweight distributed log Loki+grafana suite</li><li>Support docker-compose, k8s, jenkins</li><li>CAS Single Sign-On√</li><li>Routing current limiting√</li></ol><h3 id="microservice-architecture-diagram" tabindex="-1"><a class="header-anchor" href="#microservice-architecture-diagram"><span>Microservice architecture diagram</span></a></h3><h2 id="system-architecture-diagram" tabindex="-1"><a class="header-anchor" href="#system-architecture-diagram"><span>System architecture diagram</span></a></h2><hr><h2 id="system-screenshots" tabindex="-1"><a class="header-anchor" href="#system-screenshots"><span>System screenshots</span></a></h2><h3 id="pc" tabindex="-1"><a class="header-anchor" href="#pc"><span>PC</span></a></h3><h3 id="online-api-documentation" tabindex="-1"><a class="header-anchor" href="#online-api-documentation"><span>Online API documentation</span></a></h3><h3 id="reports" tabindex="-1"><a class="header-anchor" href="#reports"><span>Reports</span></a></h3><h3 id="process" tabindex="-1"><a class="header-anchor" href="#process"><span>process</span></a></h3><h3 id="mobile-terminal" tabindex="-1"><a class="header-anchor" href="#mobile-terminal"><span>Mobile terminal</span></a></h3><h3 id="pad-end" tabindex="-1"><a class="header-anchor" href="#pad-end"><span>PAD end</span></a></h3>',20))])}const g=a(p,[["render",h]]),f=JSON.parse('{"path":"/syncboot/Introduction.html","title":"소개","lang":"ko-KR","frontmatter":{"order":1},"git":{"updatedTime":1749510018000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"b5c965c32dfeaa81de62133194782387bf36abfc","time":1749510018000,"email":"poh@empasy.com","author":"poh","message":"로고 표시 오류 수정"}]},"filePathRelative":"syncboot/Introduction.md"}');export{g as comp,f as data};
