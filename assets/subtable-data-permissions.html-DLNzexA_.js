import{_ as a,c as t,a as s,o}from"./app-DGEuurYf.js";const n={};function i(d,e){return o(),t("div",null,e[0]||(e[0]=[s(`<h1 id="subtable-data-permissions" tabindex="-1"><a class="header-anchor" href="#subtable-data-permissions"><span>Subtable data permissions</span></a></h1><h3 id="_1-demand" tabindex="-1"><a class="header-anchor" href="#_1-demand"><span>1. Demand</span></a></h3><p><strong>After the code is generated</strong> for the main and sub-tables , the sub-table data can be viewed through the form. Now you need to control the viewing permissions of the sub-table data.</p><p>ERP style:</p><h3 id="_2-operation-steps" tabindex="-1"><a class="header-anchor" href="#_2-operation-steps"><span>2. Operation steps</span></a></h3><h4 id="_1-add-permission-menu" tabindex="-1"><a class="header-anchor" href="#_1-add-permission-menu"><span>1. Add permission menu:</span></a></h4><p>Find the request method for loading sub-table data in the controller, generally <code>queryxxxListByMainId</code>, get its <strong>request path</strong> and add a menu</p><p>You only need to fill in the first four items, and fill in <strong>the request path for the menu path</strong></p><h4 id="_2-add-data-rules" tabindex="-1"><a class="header-anchor" href="#_2-add-data-rules"><span>2. Add data rules</span></a></h4><p>Add data rules to the menu added in step 1:</p><h4 id="_3-role-authorization" tabindex="-1"><a class="header-anchor" href="#_3-role-authorization"><span>3. Role authorization</span></a></h4><p>Go to [System Management]--&gt;[Role Management] to authorize the menu/data rules added in steps 1 and 2 to the required roles.</p><h4 id="_4-code-modification" tabindex="-1"><a class="header-anchor" href="#_4-code-modification"><span>4. Code modification</span></a></h4><ul><li>controller, add annotations to the method in step 1<code>@PermissionData</code></li><li>mapper, modify the mapper method and add a parameter to the method</li><li>mapper.xml, modify the query statement,</li><li>serviceImpl, obtain permission sql before querying data and pass it to mapper</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">String sql = QueryGenerator.installAuthJdbc(xxx.class);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><blockquote><p>For ERP-style forms, only the controller method in step 1 needs to be annotated <code>@PermissionData</code>, and other files do not need to be modified.</p></blockquote>`,17)]))}const l=a(n,[["render",i]]),p=JSON.parse('{"path":"/syncboot/permission/data-permission/subtable-data-permissions.html","title":"Subtable data permissions","lang":"ko-KR","frontmatter":{"order":7},"git":{"updatedTime":1749179241000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"a96cbbf1f6c96d0e9d6bafa4174131f10429b849","time":1749179241000,"email":"poh@empasy.com","author":"poh","message":"sync 제품군 추가"}]},"filePathRelative":"syncboot/permission/data-permission/subtable-data-permissions.md"}');export{l as comp,p as data};
