import{_ as n,c as e,b as a,o as i}from"./app-CvWB_zye.js";const l={};function t(o,s){return i(),e("div",null,s[0]||(s[0]=[a(`<h2 id="git-커밋-메세지-작성" tabindex="-1"><a class="header-anchor" href="#git-커밋-메세지-작성"><span>git 커밋 메세지 작성</span></a></h2><h2 id="🔎-요약-tl-dr" tabindex="-1"><a class="header-anchor" href="#🔎-요약-tl-dr"><span>🔎 요약 (TL;DR)</span></a></h2><ul><li><strong>형식</strong>: <code>&lt;type&gt;(scope): &lt;subject&gt;</code></li><li><strong>제목(Subject)</strong>: 명령형, <strong>50자 이내</strong>, 끝에 마침표 X</li><li><strong>본문(Body)</strong>: <em>무엇을</em> + <strong>왜</strong> 했는지 (필요할 때만, 줄폭 ~72자)</li><li><strong>꼬리말(Footer)</strong>: 이슈 연결 <code>Closes #123</code>, 큰 변경은 <code>BREAKING CHANGE:</code></li><li><strong>타입(Conventional Commits)</strong>: <code>feat</code>, <code>fix</code>, <code>docs</code>, <code>style</code>, <code>refactor</code>, <code>test</code>, <code>chore</code>, <code>build</code>, <code>ci</code></li><li><strong>원칙</strong>: 한 커밋 = 한 목적, “해결은 코드가 말하고 동기는 본문이 말한다”</li></ul><hr><h2 id="📘-자세한-설명" tabindex="-1"><a class="header-anchor" href="#📘-자세한-설명"><span>📘 자세한 설명</span></a></h2><h2 id="_1-메시지-구조" tabindex="-1"><a class="header-anchor" href="#_1-메시지-구조"><span>1) 메시지 구조</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&lt;type&gt;(옵션:scope): &lt;subject&gt;</span>
<span class="line"></span>
<span class="line">본문(선택) — 무엇과 왜를 설명, 72자 내로 줄바꿈</span>
<span class="line">필요하면 목록/항목화</span>
<span class="line"></span>
<span class="line">꼬리말(선택) — 이슈/브레이킹 체인지/공동작업자 등</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="예시" tabindex="-1"><a class="header-anchor" href="#예시"><span>예시</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">feat(auth): 구글 소셜 로그인 추가</span>
<span class="line"></span>
<span class="line">OAuth 2.0 기반으로 구글 계정으로 로그인/가입을 지원합니다.</span>
<span class="line">기존 이메일 기반 가입 전환율이 낮아 대안 경로를 제공합니다.</span>
<span class="line"></span>
<span class="line">Closes #52</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_2-제목-subject-작성-규칙" tabindex="-1"><a class="header-anchor" href="#_2-제목-subject-작성-규칙"><span>2) 제목(Subject) 작성 규칙</span></a></h2><ul><li><strong>명령형 동사</strong>로 시작: “Add”, “Fix”, “Refactor” / 한국어면 “추가”, “수정”처럼 <strong>행위</strong>가 드러나게.</li><li><strong>50자 이내</strong>, <strong>마침표( . ) 금지</strong>, <strong>불필요한 수식어 금지</strong>.</li><li><strong>Scope</strong>는 좁고 명확하게: <code>auth</code>, <code>api</code>, <code>signup</code>, <code>ci</code>, <code>deps</code> 등.</li></ul><p><strong>좋은 예</strong></p><ul><li><code>fix(api): 회원가입 중복 이메일 검사 추가</code></li><li><code>refactor(search): 인덱스 전략 변경으로 응답 시간 개선</code></li><li><code>docs: 설치 가이드에 Docker 사용법 추가</code></li></ul><p><strong>나쁜 예</strong></p><ul><li><code>update stuff</code></li><li><code>fix</code></li><li><code>final commit</code>, <code>temp</code>, <code>WIP</code></li></ul><hr><h2 id="_3-본문-body-—-무엇-왜" tabindex="-1"><a class="header-anchor" href="#_3-본문-body-—-무엇-왜"><span>3) 본문(Body) — <em>무엇 + 왜</em></span></a></h2><ul><li><strong>무엇을</strong> 바꿨는지 요약 + <strong>왜</strong> 필요한지 배경/의도/대안 비교.</li><li>“어떻게”는 과도하게 설명하지 않되, <strong>중요한 의사결정/트레이드오프</strong>는 남기기.</li><li>버그 수정이면 <strong>재현 조건 → 원인 → 해결 방식</strong> 순서가 좋음.</li><li>줄폭 <strong>~72자</strong>로 자동 줄바꿈(가독성/CLI 뷰 고려).</li></ul><p><strong>본문 예시(버그 수정)</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">비동기 검증 중 중복 요청이 발생하면 마지막 응답이 이전 결과로 덮이는 문제를</span>
<span class="line">debounce 처리와 취소 토큰을 통해 방지했습니다.</span>
<span class="line"></span>
<span class="line">재현: 느린 네트워크에서 입력창에 빠르게 타이핑 시 상태 불일치 발생.</span>
<span class="line">원인: 이전 요청 취소 미구현.</span>
<span class="line">해결: AbortController로 이전 요청 취소 + debounce(300ms) 적용.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_4-꼬리말-footer" tabindex="-1"><a class="header-anchor" href="#_4-꼬리말-footer"><span>4) 꼬리말(Footer)</span></a></h2><ul><li><strong>이슈 연결</strong>: <code>Closes #123</code> / <code>Fixes JIRA-456</code></li><li><strong>브레이킹 체인지</strong>: <code>BREAKING CHANGE:</code>로 시작해 <strong>무엇이 깨졌고</strong> <strong>마이그레이션 방법</strong> 명시</li><li><strong>공동 작업자</strong>: <code>Co-authored-by: 이름 &lt;email&gt;</code></li><li><strong>참고</strong>: <code>Refs #789</code>, <code>See also: ...</code></li></ul><p><strong>브레이킹 예시</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">BREAKING CHANGE: 회원 테이블에 unique index(email) 추가.</span>
<span class="line">기존 중복 데이터는 마이그레이션 스크립트로 정리 필요.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_5-타입-conventional-commits-빠른-가이드" tabindex="-1"><a class="header-anchor" href="#_5-타입-conventional-commits-빠른-가이드"><span>5) 타입(Conventional Commits) 빠른 가이드</span></a></h2><ul><li><code>feat</code>: 사용자에게 보이는 <strong>새 기능</strong></li><li><code>fix</code>: <strong>버그 수정</strong></li><li><code>docs</code>: 문서/가이드 변경</li><li><code>style</code>: 포맷/공백/세미콜론 등 <strong>로직 무관</strong></li><li><code>refactor</code>: 리팩토링(동작 동일)</li><li><code>test</code>: 테스트 추가/수정</li><li><code>chore</code>: 빌드/도구/패키지 작업(코드 영향 적음)</li><li><code>build</code>: 빌드 시스템/의존성</li><li><code>ci</code>: CI 설정/스크립트</li></ul><blockquote><p>팀에서 <strong>필수 타입만 좁게</strong> 쓰면 일관성이 올라갑니다. (예: <code>feat|fix|refactor|docs|test|chore</code>)</p></blockquote><hr><h2 id="_6-상황별-샘플" tabindex="-1"><a class="header-anchor" href="#_6-상황별-샘플"><span>6) 상황별 샘플</span></a></h2><p>** 기능 추가 **</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">feat(search): 추천 키워드 API 추가</span>
<span class="line"></span>
<span class="line">검색 전환율 향상을 위해 서버 측 추천 키워드를 제공합니다.</span>
<span class="line">AB 테스트 그룹 B에만 노출되며 2주간 수집 후 평가 예정.</span>
<span class="line"></span>
<span class="line">Closes #410</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>** 버그 수정 **</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">fix(cart): 할인 코드가 중복 적용되던 문제 수정</span>
<span class="line"></span>
<span class="line">할인 정책 우선순위 계산 시 누락된 조건으로 인해</span>
<span class="line">특정 시나리오에서 두 번 적용되었습니다.</span>
<span class="line"></span>
<span class="line">Fixes #612</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>** 리팩토링 **</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">refactor(core): 의존성 주입으로 모듈 결합도 낮춤</span>
<span class="line"></span>
<span class="line">싱글톤 전역 접근을 제거하고 DI 컨테이너로 교체했습니다.</span>
<span class="line">테스트 가능성과 확장성을 위해 인터페이스를 도입했습니다.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>** 문서 **</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">docs(readme): 로컬 개발 환경 설정 절차 보완</span>
<span class="line"></span>
<span class="line">Node 버전 제약과 .env 샘플 파일 설명을 추가했습니다.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>** 설정/의존성 **</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">chore(deps): lodash 4.17.21로 보안 업데이트</span>
<span class="line"></span>
<span class="line">GHSA-... 취약점 패치 포함.</span>
<span class="line">Refs #702</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_7-팀-운영-팁" tabindex="-1"><a class="header-anchor" href="#_7-팀-운영-팁"><span>7) 팀 운영 팁</span></a></h2><ul><li><strong>언어 통일</strong>(한글/영문), <strong>시제 통일</strong>(명령형) 합의.</li><li><strong>한 커밋 = 한 목적</strong>(리뷰/리버트 용이). 코드는 작게, 커밋은 자주.</li><li><strong>PR 제목 = 대표 커밋 제목</strong> 관례로 맞추면 changelog 품질↑</li><li><strong>이슈-브랜치-커밋 연결 규칙</strong>: <code>feature/JIRA-123-auth-social-login</code> → 커밋 <code>feat(auth): ... (Closes JIRA-123)</code></li></ul><hr><h2 id="_8-안티패턴-피하기" tabindex="-1"><a class="header-anchor" href="#_8-안티패턴-피하기"><span>8) 안티패턴(피하기)</span></a></h2><ul><li><code>WIP</code> 남발, “update/fix” 같은 <strong>의미 없는 제목</strong></li><li><strong>여러 논리를 한 커밋</strong>에 섞기(포맷+리팩토링+기능)</li><li>커밋 메시지에 <strong>코드 덤프/긴 로그</strong> 붙이기</li><li><strong>본문 없이</strong> 맥락 상실(특히 버그 수정)</li></ul><hr><h2 id="_9-자동화-선택" tabindex="-1"><a class="header-anchor" href="#_9-자동화-선택"><span>9) 자동화(선택)</span></a></h2><ul><li><strong>Commit Template</strong>(로컬): <code>git config --global commit.template ~/.gitmessage.txt</code></li></ul><div class="language-txt line-numbers-mode" data-highlighter="prismjs" data-ext="txt"><pre><code><span class="line"># &lt;type&gt;(scope): &lt;subject&gt;</span>
<span class="line">#</span>
<span class="line"># Body: what + why (wrap ~72)</span>
<span class="line">#</span>
<span class="line"># Footer: Closes #, BREAKING CHANGE:, Co-authored-by:</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>commitlint + husky</strong>로 규칙 강제(예: Node 리포지터리) <code>package.json</code> 예시:</li></ul><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;@commitlint/cli&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^19&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;@commitlint/config-conventional&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^19&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;husky&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^9&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;commitlint&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token property">&quot;extends&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;@commitlint/config-conventional&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;prepare&quot;</span><span class="token operator">:</span> <span class="token string">&quot;husky install&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>셋업:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">npx husky <span class="token function">add</span> .husky/commit-msg <span class="token string">&#39;npx --no -- commitlint --edit &quot;$1&quot;&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,56)]))}const r=n(l,[["render",t]]),d=JSON.parse('{"path":"/agile/gitCommitLog.html","title":"커밋 메세지","lang":"ko-KR","frontmatter":{"title":"커밋 메세지","description":"효율적인 Git 커밋 메시지 작성법 완전 가이드. feat, fix, refactor 등 타입별 규칙, 커밋 제목·본문 작성법과 실전 예시까지.","head":[["meta",{"name":"keywords","content":"git commit, git commit 메시지, git 커밋 규칙, git 커밋 컨벤션, commit message guide, commit convention, git 협업, git 브랜치 전략, feat, fix, refactor"}],["meta",{"property":"og:title","content":"스크럼반"}],["meta",{"property":"og:description","content":"git commit, git commit 메시지, git 커밋 규칙, git 커밋 컨벤션, commit message guide, commit convention, git 협업, git 브랜치 전략, feat, fix, refactor"}],["meta",{"property":"og:image","content":"https://doc.empasy.com/images/favicon.png"}],["meta",{"property":"og:url","content":"https://doc.empasy.com/agile/activity.html"}]],"sort":5000},"git":{"updatedTime":1757820888000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"f912ca1146954995b2b374f16e32f477f54d596e","time":1757820888000,"email":"poh@empasy.com","author":"poh","message":"xp 통합 내용 추가"}]},"filePathRelative":"agile/gitCommitLog.md"}');export{r as comp,d as data};
