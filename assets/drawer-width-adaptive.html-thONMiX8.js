import{_ as a,c as t,a as i,o as s}from"./app-CJlkTddN.js";const n={};function d(r,e){return s(),t("div",null,e[0]||(e[0]=[i(`<h1 id="drawer-width-adaptive" tabindex="-1"><a class="header-anchor" href="#drawer-width-adaptive"><span>Drawer width adaptive</span></a></h1><p>Use useDrawerAdaptiveWidth, reference <code>UserDrawer.vue</code>implementation.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">// step1 引入useDrawerAdaptiveWidth方法</span>
<span class="line">import {useDrawerAdaptiveWidth} from &#39;/@/hooks/jeecg/useAdaptiveWidth&#39;</span>
<span class="line">// step2 获取到adaptiveWidth</span>
<span class="line">const {adaptiveWidth} = useDrawerAdaptiveWidth()</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">&lt;!-- step3 在页面上使用 --&gt;</span>
<span class="line">&lt;BasicDrawer</span>
<span class="line">    @register=&quot;registerDrawer&quot;</span>
<span class="line">    :width=&quot;adaptiveWidth&quot;</span>
<span class="line">/&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h2 id="custom-width-range" tabindex="-1"><a class="header-anchor" href="#custom-width-range"><span>Custom width range</span></a></h2><p><code>useDrawerAdaptiveWidth</code>Some default adaptive widths are defined to cope with most situations, but if the default adaptive width range cannot meet your needs, you can implement adaptive width yourself.<br> You can refer to the default configuration in the figure below for modification.<br><img src="https://lfs.k.topthink.com/lfs/9f42595afd96c770f95c262b68d1b5e059b02ab3b293412726f20b4652d8408c.dat" alt=""></p>`,8)]))}const l=a(n,[["render",d]]),c=JSON.parse('{"path":"/syncadmin/front-end-experience/front-end-tips/drawer-width-adaptive.html","title":"Drawer width adaptive","lang":"ko-KR","frontmatter":{"order":5},"git":{"updatedTime":1749179241000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"a96cbbf1f6c96d0e9d6bafa4174131f10429b849","time":1749179241000,"email":"poh@empasy.com","author":"poh","message":"sync 제품군 추가"}]},"filePathRelative":"syncadmin/front-end-experience/front-end-tips/drawer-width-adaptive.md"}');export{l as comp,c as data};
