import{_ as e,c as a,a as r,o as d}from"./app-CU20V-HQ.js";const i={};function s(o,t){return d(),a("div",null,t[0]||(t[0]=[r(`<h1 id="iso-8601-writing-format" tabindex="-1"><a class="header-anchor" href="#iso-8601-writing-format"><span>ISO 8601 writing format</span></a></h1><blockquote><p>Scheduled start time attributes</p></blockquote><table><thead><tr><th>Property Name</th><th>Attribute Description</th><th>Example</th></tr></thead><tbody><tr><td>timeDate</td><td>One-time launch, specific to a date</td><td>2022-12-12 00:00:00</td></tr><tr><td>timeDuration</td><td>Set the time after which the process will start</td><td>PT1M (1 minute later)</td></tr><tr><td>timeCycle</td><td>Periodic startup task, used to set the cycle time interval, indicating how often it is executed</td><td>R3/PT10H (3 cycles, 10 hours between each cycle)</td></tr></tbody></table><blockquote><p>ISO 8601 writing format</p></blockquote><table><thead><tr><th>letter</th><th>illustrate</th><th>Example</th></tr></thead><tbody><tr><td>P</td><td>Start Tag</td><td></td></tr><tr><td>AND</td><td>Year</td><td>1Y: 1 year</td></tr><tr><td>M</td><td>moon</td><td>1M: 1 month</td></tr><tr><td>D</td><td>Day</td><td>10D: 10 days</td></tr><tr><td>T</td><td>Time and date separators</td><td></td></tr><tr><td>H</td><td>Hour</td><td>1H:1 hour</td></tr><tr><td>M</td><td>minute</td><td>1M: 1 minute</td></tr><tr><td>S</td><td>Second</td><td>10S: 10 seconds</td></tr></tbody></table><h3 id="cron-expression-usage-trigger-every-5-minutes" tabindex="-1"><a class="header-anchor" href="#cron-expression-usage-trigger-every-5-minutes"><span>Cron expression usage, trigger every 5 minutes:</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">0 0/5 * * * ?</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><h3 id="custom-delay-usage" tabindex="-1"><a class="header-anchor" href="#custom-delay-usage"><span>Custom delay usage:</span></a></h3><p>Delay 10 minutes<br> Delay 1 minute<br> Delay 1 hour<br> Delay 1 month</p>`,10)]))}const c=e(i,[["render",s]]),h=JSON.parse('{"path":"/syncboot/advanced-features/iso-8601-writing-format.html","title":"ISO 8601 writing format","lang":"ko-KR","frontmatter":{"order":5},"git":{"updatedTime":1749507909000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"b750c3240053572cbcbb08ac1e9cd0bd9974af53","time":1749507909000,"email":"poh@empasy.com","author":"poh","message":"build to docs:build"}]},"filePathRelative":"syncboot/advanced-features/iso-8601-writing-format.md"}');export{c as comp,h as data};
