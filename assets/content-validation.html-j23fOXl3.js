import{_ as s,c as a,a as e,o as t}from"./app-Cp_FoW-Q.js";const i={};function o(l,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="document-content-verification" tabindex="-1"><a class="header-anchor" href="#document-content-verification"><span>Document content verification</span></a></h1><p>This project provides powerful document content verification capabilities to help you maintain the quality and consistency of your documents.</p><h2 id="functional-overview" tabindex="-1"><a class="header-anchor" href="#functional-overview"><span>Functional Overview</span></a></h2><p>The content validation script <code>validate-content.js</code> can check the following:</p><ul><li><strong>Link Verification</strong>: Check the validity of internal and external links</li><li><strong>Image Check</strong>: Make sure all images are present and have appropriate alternative text</li><li><strong>Frontmatter validation</strong>: Check required metadata fields</li><li><strong>Title structure check</strong>: Make sure the title hierarchy is reasonable and there is no duplication</li><li><strong>Spell Check</strong>: Verify correct spelling and capitalization of common terms</li><li><strong>Anchor validation</strong>: Ensure that the references inside the document are valid</li></ul><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>You can run content verification with the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># Validate all documents</span></span>
<span class="line"><span class="token function">npm</span> run docs:validate</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Or use shorthand</span></span>
<span class="line"><span class="token function">npm</span> run validate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration-options" tabindex="-1"><a class="header-anchor" href="#configuration-options"><span>Configuration options</span></a></h2><p>The validation script provides a variety of configuration options that can be customized according to project needs. The main configurations include:</p><h3 id="spell-check-dictionary" tabindex="-1"><a class="header-anchor" href="#spell-check-dictionary"><span>Spell check dictionary</span></a></h3><p>The script has built-in correction lists for common English and Chinese terms. You can add or modify correction rules by editing the <code>SPELLING_CORRECTIONS</code> and <code>CHINESE_SPELLING_CORRECTIONS</code> objects in <code>scripts/validate-content.js</code>.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// Example: Add a new spelling rule</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">SPELLING_CORRECTIONS</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Existing rules</span></span>
<span class="line">  <span class="token literal-property property">javascript</span><span class="token operator">:</span> <span class="token string">&quot;JavaScript&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// Add custom rules</span></span>
<span class="line">  <span class="token literal-property property">react</span><span class="token operator">:</span> <span class="token string">&quot;React&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">nextjs</span><span class="token operator">:</span> <span class="token string">&quot;Next.js&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="link-verification-options" tabindex="-1"><a class="header-anchor" href="#link-verification-options"><span>Link Verification Options</span></a></h3><p>External link validation supports the following configurations:</p><ul><li><strong>Number of concurrent requests</strong>: Control the number of connections that can be verified simultaneously through <code>MAX_CONCURRENT_REQUESTS</code></li><li><strong>Request timeout</strong>: Set the timeout (in milliseconds) for the connection check via <code>REQUEST_TIMEOUT</code></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// Example: Modify link verification configuration</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">MAX_CONCURRENT_REQUESTS</span> <span class="token operator">=</span> <span class="token number">10</span> <span class="token comment">// Default is 5</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">REQUEST_TIMEOUT</span> <span class="token operator">=</span> <span class="token number">10000</span> <span class="token comment">// Default is 5000ms</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="output-description" tabindex="-1"><a class="header-anchor" href="#output-description"><span>Output description</span></a></h2><p>The validation script will output two types of messages:</p><ul><li><strong>Errors</strong>: Serious problems that must be fixed, such as broken links or missing images</li><li><strong>Warnings</strong>: issues that are suggested to be fixed but will not cause the build to fail, such as spelling suggestions or possible improvements</li></ul><p>Sample output:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">=== Verification Result===</span>
<span class="line"></span>
<span class="line">Error (1):</span>
<span class="line">- docs/guide/getting-started.md: Link broken: ../api/missing-page.md</span>
<span class="line"></span>
<span class="line">Warning(2):</span>
<span class="line">- docs/guide/introduction.md:15: Possible typo: &quot;javascript&quot; should be &quot;JavaScript&quot;</span>
<span class="line">- docs/config/options.md: Image missing alt text: ./images/config-diagram.png</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="best-practices" tabindex="-1"><a class="header-anchor" href="#best-practices"><span>Best Practices</span></a></h2><p>To maintain documentation quality, we recommend the following best practices:</p><ol><li><strong>Run validation before submit</strong>: Make sure all changes pass validation before submitting</li><li><strong>Periodically validate the entire document</strong>: prevent external links from becoming invalid over time</li><li><strong>Pay attention to warning messages</strong>: Even warnings should be resolved as much as possible to improve the quality of the document</li><li><strong>Add alt text to all images</strong>: Improve accessibility and SEO</li></ol><h2 id="extended-validation-rules" tabindex="-1"><a class="header-anchor" href="#extended-validation-rules"><span>Extended validation rules</span></a></h2><p>You can extend the validation rules according to your project needs. For example, to add validation for a specific format:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// Example: Adding custom validation rules</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">validateCustomFormat</span><span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> filePath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Implement custom validation logic</span></span>
<span class="line">  <span class="token keyword">const</span> customRegex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">specific format</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>customRegex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    warnings<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: custom format problem found</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Then call in the main verification function</span></span>
<span class="line"><span class="token function">validateCustomFormat</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> relativePath<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="common-problems-troubleshooting" tabindex="-1"><a class="header-anchor" href="#common-problems-troubleshooting"><span>Common Problems Troubleshooting</span></a></h2><p>If you have problems running validation, check:</p><ol><li>Is the Node.js version compatible?</li><li>Are all necessary dependencies installed?</li><li>Network connection status (network connection is required for external link verification)</li><li>Is there a firewall or proxy restricting external requests?</li></ol>`,31)]))}const p=s(i,[["render",o]]),r=JSON.parse('{"path":"/synceta/content-validation.html","title":"Content Verification","lang":"ko-KR","frontmatter":{"title":"Content Verification"},"git":{"updatedTime":1749520269000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"ce6bbb93740a013f050b7489e7263a8f50a029d8","time":1749520269000,"email":"poh@empasy.com","author":"poh","message":"폰트 noto sans로 변경"}]},"filePathRelative":"synceta/content-validation.md"}');export{p as comp,r as data};
