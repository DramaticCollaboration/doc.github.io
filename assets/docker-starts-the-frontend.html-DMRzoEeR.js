import{_ as d,c as i,a,b as n,d as s,w as o,r as c,o as l,e as r}from"./app-CU20V-HQ.js";const p={};function h(u,e){const t=c("RouteLink");return l(),i("div",null,[e[2]||(e[2]=a(`<h1 id="docker-starts-the-front-end" tabindex="-1"><a class="header-anchor" href="#docker-starts-the-front-end"><span>Docker starts the front end</span></a></h1><h2 id="_1-docker-image-starts-the-front-end-docking-the-single-backend" tabindex="-1"><a class="header-anchor" href="#_1-docker-image-starts-the-front-end-docking-the-single-backend"><span>1. Docker image starts the front end (docking the single backend)</span></a></h2><h3 id="_1-download-the-project" tabindex="-1"><a class="header-anchor" href="#_1-download-the-project"><span>1. Download the project</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">git clone https://github.com/jeecgboot/SyncBoot.git</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><h3 id="_2-configure-host" tabindex="-1"><a class="header-anchor" href="#_2-configure-host"><span>2. Configure host</span></a></h3><blockquote><p>Reminder: Please note that you need to <code>127.0.0.1</code>replace with the real IP, such as <code>192.</code>the beginning, otherwise the backend will not work.</p></blockquote><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">127.0.0.1 jeecg-boot-system</span>
<span class="line">127.0.0.1 jeecg-boot-gateway</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><p>You can use the tool <a href="https://download.csdn.net/download/zhangdaiscott/88918530" target="_blank" rel="noopener noreferrer">SwitchHosts</a> to quickly configure the host.</p><h3 id="_3-configure-the-backend-domain-name-can-be-ignored" tabindex="-1"><a class="header-anchor" href="#_3-configure-the-backend-domain-name-can-be-ignored"><span>3. Configure the backend domain name (can be ignored)</span></a></h3><p>Enter the front-end project</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">cd SyncBoot/jeecgboot-vue3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>Revise<code>.env.production</code></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">VITE_GLOB_API_URL=/jeecgboot</span>
<span class="line">VITE_GLOB_DOMAIN_URL=http://jeecg-boot-system:8080/jeecg-boot</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><blockquote><p>The jeecg-boot-system here corresponds to the domain name configuration of the host.</p></blockquote><h3 id="_4-enter-the-project-root-directory-and-execute-the-compile-command" tabindex="-1"><a class="header-anchor" href="#_4-enter-the-project-root-directory-and-execute-the-compile-command"><span>4. Enter the project root directory and execute the compile command</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">pnpm i</span>
<span class="line">npm run build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h3 id="_5-build-the-image" tabindex="-1"><a class="header-anchor" href="#_5-build-the-image"><span>5. Build the image</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">docker build -t jeecgboot-vue3 .</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><h3 id="_6-start-the-image" tabindex="-1"><a class="header-anchor" href="#_6-start-the-image"><span>6. Start the image</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">docker run --name jeecgboot-vue3-nginx --network jeecg_boot -p 80:80 -d jeecgboot-vue3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><blockquote><p>Note: If the startup prompt is displayed <code>docker: Error response from daemon: network jeecg_boot not found</code>, you need to start the background docker first.</p></blockquote><h3 id="_7-access-the-front-end-project" tabindex="-1"><a class="header-anchor" href="#_7-access-the-front-end-project"><span>7. Access the front-end project</span></a></h3><p><a href="http://localhost:80" target="_blank" rel="noopener noreferrer">http://localhost:80</a></p><h3 id="_8-start-the-background-project" tabindex="-1"><a class="header-anchor" href="#_8-start-the-background-project"><span>8. Start the background project</span></a></h3>`,31)),n("p",null,[s(t,{to:"/syncboot/docker/up.html"},{default:o(()=>e[0]||(e[0]=[r("Docker Monolith Backend")])),_:1})]),e[3]||(e[3]=a(`<h3 id="_9-change-the-background-host-address-to-ip" tabindex="-1"><a class="header-anchor" href="#_9-change-the-background-host-address-to-ip"><span>9. Change the background host address to IP</span></a></h3><blockquote><p>If you cannot get the verification code, please change the host in the background to the real IP address, and do not use 127.0.0.1.<br> Refer to the figure below, and restart the front-end docker after changing it.</p></blockquote><p>After restarting, refresh the page to get the verification code.</p><hr><h2 id="_2-docker-image-starts-the-front-end-connecting-to-the-microservice-backend" tabindex="-1"><a class="header-anchor" href="#_2-docker-image-starts-the-front-end-connecting-to-the-microservice-backend"><span>2. Docker image starts the front end (connecting to the microservice backend)</span></a></h2><blockquote><p>The previous steps are the same as for monomers, only the differences are written here</p></blockquote><h3 id="_1-change-the-backend-domain-name-to-the-gateway-address" tabindex="-1"><a class="header-anchor" href="#_1-change-the-backend-domain-name-to-the-gateway-address"><span>1. Change the backend domain name to the gateway address</span></a></h3><p>.env.production</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">VITE_GLOB_API_URL=/jeecgboot</span>
<span class="line">VITE_GLOB_DOMAIN_URL=http://jeecg-boot-gateway:9999</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p>`,10)),n("p",null,[s(t,{to:"/syncboot/docker/springcloud.html"},{default:o(()=>e[1]||(e[1]=[r("Docker starts the microservice background")])),_:1})]),e[4]||(e[4]=a(`<h3 id="_2-modify-the-dockerfile-file" tabindex="-1"><a class="header-anchor" href="#_2-modify-the-dockerfile-file"><span>2. Modify the Dockerfile file</span></a></h3><p>Replace jeecg-boot-system with jeecg-boot- <code>http://jeecg-boot-system:8080/jeecg-boot</code>gateway<code>http://jeecg-boot-gateway:9999</code></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">location   /jeecgboot/ {</span>
<span class="line">         # 必须有/</span>
<span class="line">         proxy_pass              http://jeecg-boot-gateway:9999/;</span>
<span class="line">         proxy_redirect          off;</span>
<span class="line">         proxy_set_header        Host jeecg-boot-gateway;</span>
<span class="line">         proxy_set_header        X-Real-IP \\$remote_addr;</span>
<span class="line">         proxy_set_header        X-Forwarded-For \\$proxy_add_x_forwarded_for;</span>
<span class="line">  }</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><blockquote><p>Note: In the microservice deployment Dockerfile, both location and proxy_pass must end with /, otherwise the gateway connection will report an error.</p></blockquote><h3 id="_3-enter-the-project-root-directory-and-execute-the-compile-command" tabindex="-1"><a class="header-anchor" href="#_3-enter-the-project-root-directory-and-execute-the-compile-command"><span>3. Enter the project root directory and execute the compile command</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">npm run build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><h3 id="_4-build-the-image" tabindex="-1"><a class="header-anchor" href="#_4-build-the-image"><span>4. Build the image</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">docker build -t jeecgboot-vue3 .</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><h3 id="_5-start-the-image" tabindex="-1"><a class="header-anchor" href="#_5-start-the-image"><span>5. Start the image</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">docker run --name jeecgboot-vue3-nginx --network jeecg_boot -p 80:80 -d jeecgboot-vue3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><blockquote><p>Note: If the startup prompt is displayed <code>docker: Error response from daemon: network jeecg_boot not found</code>, you need to start the background docker first.</p></blockquote><h3 id="_7-access-the-front-end-project-1" tabindex="-1"><a class="header-anchor" href="#_7-access-the-front-end-project-1"><span>7. Access the front-end project</span></a></h3><p><a href="http://localhost:80" target="_blank" rel="noopener noreferrer">http://localhost:80</a></p>`,17))])}const b=d(p,[["render",h]]),g=JSON.parse('{"path":"/syncboot/docker/docker-starts-the-frontend.html","title":"Docker starts the front end","lang":"ko-KR","frontmatter":{"order":5},"git":{"updatedTime":1749507909000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"b750c3240053572cbcbb08ac1e9cd0bd9974af53","time":1749507909000,"email":"poh@empasy.com","author":"poh","message":"build to docs:build"}]},"filePathRelative":"syncboot/docker/docker-starts-the-frontend.md"}');export{b as comp,g as data};
