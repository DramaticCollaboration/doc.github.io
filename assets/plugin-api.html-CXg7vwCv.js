import{_ as a,c as s,a as e,o as p}from"./app-DXx38SkF.js";const i={};function t(l,n){return p(),s("div",null,n[0]||(n[0]=[e(`<h1 id="plugin-api" tabindex="-1"><a class="header-anchor" href="#plugin-api"><span>Plugin API</span></a></h1><p>VuePress&#39;s plugin system allows you to extend the functionality of VuePress. This guide will show you how to create and use plugins.</p><h2 id="plugin-basics" tabindex="-1"><a class="header-anchor" href="#plugin-basics"><span>Plugin Basics</span></a></h2><p>A plugin is a function that receives an app object as an argument and returns an object:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">myPlugin</span> <span class="token operator">=</span> <span class="token parameter">app</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;my-plugin&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// Plugin options</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="plugin-options" tabindex="-1"><a class="header-anchor" href="#plugin-options"><span>Plugin Options</span></a></h2><p>Plugins can define the following options:</p><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span><code>name</code></span></a></h3><ul><li>Type: <code>string</code></li><li>Required: Yes</li></ul><p>The name of the plugin.</p><h3 id="multiple" tabindex="-1"><a class="header-anchor" href="#multiple"><span><code>multiple</code></span></a></h3><ul><li>Type: <code>boolean</code></li><li>Default value: <code>false</code></li></ul><p>Whether to allow the same plugin to be used multiple times.</p><h3 id="clientappenhancefiles" tabindex="-1"><a class="header-anchor" href="#clientappenhancefiles"><span><code>clientAppEnhanceFiles</code></span></a></h3><ul><li>Type: <code>string | string[]</code></li><li>Default value: <code>undefined</code></li></ul><p>Path to the client enhancement file.</p><h3 id="clientappsetupfiles" tabindex="-1"><a class="header-anchor" href="#clientappsetupfiles"><span><code>clientAppSetupFiles</code></span></a></h3><ul><li>Type: <code>string | string[]</code></li><li>Default value: <code>undefined</code></li></ul><p>Path to the client settings file.</p><h3 id="clientapprootcomponentfiles" tabindex="-1"><a class="header-anchor" href="#clientapprootcomponentfiles"><span><code>clientAppRootComponentFiles</code></span></a></h3><ul><li>Type: <code>string | string[]</code></li><li>Default value: <code>undefined</code></li></ul><p>The path to the client root component file.</p><h3 id="extendsmarkdown" tabindex="-1"><a class="header-anchor" href="#extendsmarkdown"><span><code>extendsMarkdown</code></span></a></h3><ul><li>Type: <code>(md: MarkdownIt) =&gt; void</code></li><li>Default value: <code>undefined</code></li></ul><p>Functions that extend the Markdown parser.</p><h3 id="extendspageoptions" tabindex="-1"><a class="header-anchor" href="#extendspageoptions"><span><code>extendsPageOptions</code></span></a></h3><ul><li>Type: <code>(pageOptions: PageOptions) =&gt; void</code></li><li>Default value: <code>undefined</code></li></ul><p>Functions to extend page options.</p><h3 id="extendspagedata" tabindex="-1"><a class="header-anchor" href="#extendspagedata"><span><code>extendsPageData</code></span></a></h3><ul><li>Type: <code>(pageData: PageData) =&gt; void</code></li><li>Default value: <code>undefined</code></li></ul><p>Functions that extend page data.</p><h3 id="oninitialized" tabindex="-1"><a class="header-anchor" href="#oninitialized"><span><code>onInitialized</code></span></a></h3><ul><li>Type: <code>() =&gt; Promise&lt;void&gt; | void</code></li><li>Default value: <code>undefined</code></li></ul><p>Function called after application initialization is complete.</p><h3 id="onprepared" tabindex="-1"><a class="header-anchor" href="#onprepared"><span><code>onPrepared</code></span></a></h3><ul><li>Type: <code>() =&gt; Promise&lt;void&gt; | void</code></li><li>Default value: <code>undefined</code></li></ul><p>Function called after the application is ready.</p><h3 id="onwatched" tabindex="-1"><a class="header-anchor" href="#onwatched"><span><code>onWatched</code></span></a></h3><ul><li>Type: <code>() =&gt; Promise&lt;void&gt; | void</code></li><li>Default value: <code>undefined</code></li></ul><p>Function to be called after a file has changed.</p><h3 id="ongenerated" tabindex="-1"><a class="header-anchor" href="#ongenerated"><span><code>onGenerated</code></span></a></h3><ul><li>Type: <code>() =&gt; Promise&lt;void&gt; | void</code></li><li>Default value: <code>undefined</code></li></ul><p>Function called after static files are generated.</p><h2 id="plugin-example" tabindex="-1"><a class="header-anchor" href="#plugin-example"><span>Plugin Example</span></a></h2><h3 id="simple-plugin" tabindex="-1"><a class="header-anchor" href="#simple-plugin"><span>Simple plugin</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">myPlugin</span> <span class="token operator">=</span> <span class="token parameter">app</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;my-plugin&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">onInitialized</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Application has been initialized&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="markdown-plugin" tabindex="-1"><a class="header-anchor" href="#markdown-plugin"><span>Markdown plugin</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">markdownPlugin</span> <span class="token operator">=</span> <span class="token parameter">app</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;markdown-plugin&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">extendsMarkdown</span><span class="token operator">:</span> <span class="token parameter">md</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// Add custom Markdown rules</span></span>
<span class="line">      md<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;markdown-it-emoji&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="page-data-plugin" tabindex="-1"><a class="header-anchor" href="#page-data-plugin"><span>Page Data Plugin</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">pageDataPlugin</span> <span class="token operator">=</span> <span class="token parameter">app</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;page-data-plugin&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">extendsPageData</span><span class="token operator">:</span> <span class="token parameter">pageData</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// Add custom page data</span></span>
<span class="line">      pageData<span class="token punctuation">.</span>customData <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">timestamp</span><span class="token operator">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="using-plugins" tabindex="-1"><a class="header-anchor" href="#using-plugins"><span>Using plugins</span></a></h2><p>Use the plugin in the VuePress configuration file:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineUserConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuepress&quot;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> myPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./my-plugin&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineUserConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">myPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="plugin-development-best-practices" tabindex="-1"><a class="header-anchor" href="#plugin-development-best-practices"><span>Plugin Development Best Practices</span></a></h2><ol><li><strong>Naming convention</strong>:</li></ol><ul><li>Use kebab-case for plugin naming</li><li>Use <code>@vuepress/plugin-</code> prefix (if it is an official plugin)</li></ul><ol start="2"><li><strong>Documentation</strong>:</li></ol><ul><li>Provide a clear README</li><li>Contains usage examples</li><li>Description of plugin options</li></ul><ol start="3"><li><strong>Test</strong>:</li></ol><ul><li>Writing unit tests</li><li>Test the behavior under different configurations</li></ul><ol start="4"><li><strong>Error handling</strong>:</li></ol><ul><li>Provide meaningful error messages</li><li>Handle exceptions gracefully</li></ul><h2 id="reference-links" tabindex="-1"><a class="header-anchor" href="#reference-links"><span>Reference Links</span></a></h2><ul><li><a href="https://v2.vuepress.vuejs.org/zh/reference/plugin-api.html" target="_blank" rel="noopener noreferrer">VuePress Plugin API Reference</a></li><li><a href="https://v2.vuepress.vuejs.org/zh/advanced/plugin.html" target="_blank" rel="noopener noreferrer">VuePress Plugin Development Guide</a></li></ul>`,64)]))}const c=a(i,[["render",t]]),r=JSON.parse('{"path":"/reference/plugin-api.html","title":"Plugin API","lang":"zh-CN","frontmatter":{"title":"Plugin API"},"git":{"updatedTime":1749108341000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"c921d4afd7014a6297baf4d4ae62fd4fa0559e84","time":1749108341000,"email":"poh@empasy.com","author":"poh","message":"initial import"}]},"filePathRelative":"reference/plugin-api.md"}');export{c as comp,r as data};
