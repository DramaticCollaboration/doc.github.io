import{_ as s,c as a,a as n,o as i}from"./app-CJlkTddN.js";const l={};function t(o,e){return i(),a("div",null,e[0]||(e[0]=[n(`<h1 id="lightweight-distributed-logging-solution" tabindex="-1"><a class="header-anchor" href="#lightweight-distributed-logging-solution"><span>Lightweight distributed logging solution</span></a></h1><h4 id="loki-vs-elk" tabindex="-1"><a class="header-anchor" href="#loki-vs-elk"><span>Loki VS ELK</span></a></h4><p>Loki and ELK (Elasticsearch, Logstash, Kibana) are both commonly used log processing systems, and each has some advantages. Here are some advantages of Loki over ELK:</p><ul><li>Higher storage efficiency: Loki uses compression and splitting of log data to reduce storage space usage. In contrast, ELK needs to maintain a large index, which requires more storage space.</li><li>Faster query speed: Loki uses a label index mechanism similar to Prometheus to store and query log data, which enables it to quickly perform distributed queries and aggregations without loading all data from storage into memory. ELK needs to load data from storage into memory for querying, and the query speed is relatively slow.</li><li>Easier to deploy and manage: Loki is a lightweight log aggregation system. In contrast, ELK requires the deployment and management of multiple components, which requires more resources and manpower costs.</li></ul><h4 id="install-loki-and-grafana-packages-through-docker-compose" tabindex="-1"><a class="header-anchor" href="#install-loki-and-grafana-packages-through-docker-compose"><span>Install Loki and grafana packages through docker-compose</span></a></h4><blockquote><p>Loki performs log aggregation processing similar to es in elk</p><p>Grafana is a log display, similar to kibana in elk, which can filter and display logs through various tags and expressions</p></blockquote><p>The content of docker-compose.yml is as follows</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">version: &quot;3&quot;</span>
<span class="line"></span>
<span class="line">networks:</span>
<span class="line">  loki:</span>
<span class="line"></span>
<span class="line">services:</span>
<span class="line">  loki:</span>
<span class="line">    image: grafana/loki</span>
<span class="line">    restart: always</span>
<span class="line">    environment:</span>
<span class="line">    - TZ=Asia/Seoul</span>
<span class="line">    - LANG=zh_CN.UTF-8</span>
<span class="line">    ports:</span>
<span class="line">    - 3100:3100</span>
<span class="line">    networks:</span>
<span class="line">    - loki</span>
<span class="line"></span>
<span class="line">  grafana:</span>
<span class="line">    image: grafana/grafana:master</span>
<span class="line">    restart: always</span>
<span class="line">    environment:</span>
<span class="line">    - TZ=Asia/Seoul</span>
<span class="line">    - LANG=zh_CN.UTF-8</span>
<span class="line">    ports:</span>
<span class="line">    - 3000:3000</span>
<span class="line">    networks:</span>
<span class="line">    - loki</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h4 id="install-the-loki-docker-plugin-on-each-server" tabindex="-1"><a class="header-anchor" href="#install-the-loki-docker-plugin-on-each-server"><span>Install the Loki Docker plugin on each server</span></a></h4><p>Command line installation</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>Update plugins</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">docker plugin disable loki --force</span>
<span class="line">docker plugin upgrade loki grafana/loki-docker-driver:latest --grant-all-permissions</span>
<span class="line">docker plugin enable loki</span>
<span class="line">systemctl restart docker</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><p>There are two ways to use the loki docker plugin.</p><ul><li>Configure daemon.json and collect logs of all containers created thereafter (note that only containers created after daemon.json is configured and the Docker service is restarted will output logs to Loki). If it is an existing container, the container needs to be rebuilt.</li><li>When creating a new container, specify the logging type as loki, so that only containers with logging specified will output to loki</li></ul><p>Edit daemon.json. The default path in Linux is /etc/docker/daemon.json (sudo required), and the default path in Windows is %userprofile%.docker\\daemon.json. After editing and adding, you need to restart the docker daemon.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">{</span>
<span class="line">  &quot;log-driver&quot;: &quot;loki&quot;,</span>
<span class="line">  &quot;log-opts&quot;: {</span>
<span class="line">    &quot;loki-url&quot;: &quot;http://YOUR_IP:3100/loki/api/v1/push&quot;,</span>
<span class="line">    &quot;max-size&quot;: &quot;50m&quot;,</span>
<span class="line">    &quot;max-file&quot;: &quot;10&quot;</span>
<span class="line">  },</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h4 id="grafana-display-and-filter-logs" tabindex="-1"><a class="header-anchor" href="#grafana-display-and-filter-logs"><span>Grafana display and filter logs</span></a></h4><p>When you first install grafana, you map it to port 3000 on the host machine, so the address is [http://YOUR_IP:3000]</p><p>The default username and password for grafana are admin and admin</p><p>The first time you enter, you need to change the admin password</p><p>In the left menu, go to Configuration -&gt; Data Source -&gt; Add Data Source -&gt; Loki</p><p>Configure the loki running address at url, save and test, and click explore on the same page to view the log</p><p><img src="https://lfs.k.topthink.com/lfs/2d770a633089c7088772881ad2c9aacb343e3df7d8fc23b8eac51b5616fed257.dat" alt=""></p><p><img src="https://lfs.k.topthink.com/lfs/6cee2b7eb46cb806b117e04fb8a0e1f5fdde7ceb3e4db99e108efe2706e6e52d.dat" alt=""></p><h4 id="query-log" tabindex="-1"><a class="header-anchor" href="#query-log"><span>Query log</span></a></h4><p>Use the search statement <code>{compose_service=&quot;jeecg-boot-system&quot;} |= &quot;spring&quot;</code>and click Run Query to query the logs containing &quot;spring&quot; under the jeecg-boot-system service.</p><blockquote><p>LogQL expressions are rich in functionality, see: <a href="https://grafana.com/docs/loki/latest/query/log_queries" target="_blank" rel="noopener noreferrer">https://grafana.com/docs/loki/latest/logql/log_queries</a></p></blockquote><p><img src="https://lfs.k.topthink.com/lfs/9eb6219381b5cabd91f36748d56f41f1571ab8ed9bbe91c223b421c087e0ef9c.dat" alt=""></p>`,33)]))}const d=s(l,[["render",t]]),c=JSON.parse('{"path":"/syncboot/microservice/microservice-components/lightweight-distributed-logging-solution.html","title":"Lightweight distributed logging solution","lang":"ko-KR","frontmatter":{"order":6},"git":{"updatedTime":1749179241000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"a96cbbf1f6c96d0e9d6bafa4174131f10429b849","time":1749179241000,"email":"poh@empasy.com","author":"poh","message":"sync 제품군 추가"}]},"filePathRelative":"syncboot/microservice/microservice-components/lightweight-distributed-logging-solution.md"}');export{d as comp,c as data};
