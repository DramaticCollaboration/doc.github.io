import{_ as a,c as t,a as n,o}from"./app-CGhJnnYK.js";const i={};function r(s,e){return o(),t("div",null,e[0]||(e[0]=[n('<h1 id="instructions-for-using-the-parent-child-coding" tabindex="-1"><a class="header-anchor" href="#instructions-for-using-the-parent-child-coding"><span>Instructions for using the parent-child coding</span></a></h1><p>jeecg-boot provides an interface for automatically generating code. You can generate code by calling the interface.</p><h2 id="_1-generate-parent-code" tabindex="-1"><a class="header-anchor" href="#_1-generate-parent-code"><span>1. Generate parent code</span></a></h2><p>There is only one parameter code when generating the parent code. When there is no data at the same level, it is null and the generated code is A01.<br> When there is data at the same level, the code passed in is the largest data at the same level, such as A04, the generated code is A05 .<br> Note: When the code is Z99, the next code generated is Z99A01<br> . When generating a child code, the parent code Z99A01 needs to be passed in, and the generated child code is Z99A01A01.</p><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example:</span></a></h3><ol><li>YouBianCodeUtil.getNextYouBianCode(null) //Generate code: A01</li><li>YouBianCodeUtil.getNextYouBianCode(&quot;A04&quot;) //Generate code: A05</li></ol><h2 id="_2-generate-sub-level-code" tabindex="-1"><a class="header-anchor" href="#_2-generate-sub-level-code"><span>2. Generate sub-level code</span></a></h2><p>There are two parameters when generating child codes. The first parameter is the parent code (parentCode), which needs to be passed in.<br> The second parameter is localCode. When the child has no peer data, localCode is null, and A05A01 is generated.<br> When the child has peer data, the maximum peer data is passed in, and the generated code is A05A02.</p><h3 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1"><span>Example:</span></a></h3><ol><li>YouBianCodeUtil.getSubYouBianCode(&quot;A05&quot;,null); //The generated code is A05A01</li><li>YouBianCodeUtil.getSubYouBianCode(&quot;A05&quot;,&quot;A05A01&quot;); //The generated code is A05A02</li></ol>',10)]))}const c=a(i,[["render",r]]),h=JSON.parse('{"path":"/syncboot/common-functions/instructions-for-using-the-parent-child-coding.html","title":"Instructions for using the parent-child coding","lang":"ko-KR","frontmatter":{"order":12},"git":{"updatedTime":1749510018000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"b5c965c32dfeaa81de62133194782387bf36abfc","time":1749510018000,"email":"poh@empasy.com","author":"poh","message":"로고 표시 오류 수정"}]},"filePathRelative":"syncboot/common-functions/instructions-for-using-the-parent-child-coding.md"}');export{c as comp,h as data};
