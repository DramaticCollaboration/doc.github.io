import{_ as s,c as e,a,o as i}from"./app-CJlkTddN.js";const l={};function r(d,n){return i(),e("div",null,n[0]||(n[0]=[a(`<h1 id="custom-rendering-function" tabindex="-1"><a class="header-anchor" href="#custom-rendering-function"><span>Custom rendering function</span></a></h1><p>Render Function</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">import {render} from &quot;/@/utils/common/renderUtils&quot;;</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">/**</span>
<span class="line"> * 根据字典编码 渲染</span>
<span class="line"> * @param v 值</span>
<span class="line"> * @param code 字典编码</span>
<span class="line"> */</span>
<span class="line">render.renderDict(record.sex, &#39;sex&#39;)</span>
<span class="line">/**</span>
<span class="line"> * 渲染列表头像</span>
<span class="line"> * @param record</span>
<span class="line"> */</span>
<span class="line">render.renderAvatar</span>
<span class="line">/**</span>
<span class="line"> * 渲染图片</span>
<span class="line"> * @param text</span>
<span class="line"> */</span>
<span class="line">render.renderImage(text)</span>
<span class="line">/**</span>
<span class="line"> * 渲染Tooltip</span>
<span class="line"> * @param text</span>
<span class="line"> *   @param length</span>
<span class="line"> */</span>
<span class="line">render.renderTip(text,30)</span>
<span class="line">/**</span>
<span class="line"> * 渲染a标签</span>
<span class="line"> * @param text</span>
<span class="line"> * @param length</span>
<span class="line"> */</span>
<span class="line">render.renderHref(text)</span>
<span class="line">/**</span>
<span class="line"> *根据字典options渲染</span>
<span class="line"> * @param text</span>
<span class="line"> * @param array 字典数组</span>
<span class="line"> * @param renderTag 是否渲染成Tag标签</span>
<span class="line"> */</span>
<span class="line">render.renderDictNative(text, [{ label: &#39;未读&#39;, value: &#39;0&#39;,color:&#39;red&#39; }, { label: &#39;已读&#39;, value: &#39;1&#39; }],true);</span>
<span class="line">/**</span>
<span class="line"> * 渲染a标签</span>
<span class="line"> * @param model 表单model</span>
<span class="line"> * @param field 字段</span>
<span class="line"> */</span>
<span class="line">render.renderTinymce(model,field)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p>`,4)]))}const p=s(l,[["render",r]]),m=JSON.parse('{"path":"/syncadmin/front-end-experience/custom-rendering-function.html","title":"Custom rendering function","lang":"ko-KR","frontmatter":{"order":10},"git":{"updatedTime":1749179241000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"a96cbbf1f6c96d0e9d6bafa4174131f10429b849","time":1749179241000,"email":"poh@empasy.com","author":"poh","message":"sync 제품군 추가"}]},"filePathRelative":"syncadmin/front-end-experience/custom-rendering-function.md"}');export{p as comp,m as data};
