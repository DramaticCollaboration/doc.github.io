import{_ as n,c as a,a as t,o as s}from"./app-DGEuurYf.js";const i={};function o(r,e){return s(),a("div",null,e[0]||(e[0]=[t(`<h1 id="docker-starts-the-frontend-and-backend-with-one-click" tabindex="-1"><a class="header-anchor" href="#docker-starts-the-frontend-and-backend-with-one-click"><span>Docker starts the frontend and backend with one click</span></a></h1><h3 id="_1-download-the-project" tabindex="-1"><a class="header-anchor" href="#_1-download-the-project"><span>1. Download the project</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">git clone https://github.com/jeecgboot/SyncBoot.git</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><h3 id="_2-modify-the-background-configuration" tabindex="-1"><a class="header-anchor" href="#_2-modify-the-background-configuration"><span>2. Modify the background configuration</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">cd jeecg-boot\\jeecg-module-system\\jeecg-system-start\\src\\main\\resources</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>Modify the database and redis connections in application-dev.yml<br> to <code>jeecg-boot-mysql</code>and<code>jeecg-boot-redis</code></p><h3 id="_3-compile-the-background-project" tabindex="-1"><a class="header-anchor" href="#_3-compile-the-background-project"><span>3. Compile the background project</span></a></h3><p>Enter the backstage</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">cd SyncBoot/jeecg-boot</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>Compile</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">mvn clean install</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><h3 id="_4-modify-the-front-end-configuration" tabindex="-1"><a class="header-anchor" href="#_4-modify-the-front-end-configuration"><span>4. Modify the front-end configuration</span></a></h3><blockquote><p>This is the default configuration at present, if you have not modified it, it will be ignored.</p></blockquote><p>Modify the configuration file: jeecgboot-vue3/.env.production</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">VITE_GLOB_DOMAIN_URL=http://jeecg-boot-system:8080/jeecg-boot</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><h3 id="_5-compile-the-front-end-project" tabindex="-1"><a class="header-anchor" href="#_5-compile-the-front-end-project"><span>5. Compile the front-end project</span></a></h3><p>Enter the front end</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">cd SyncBoot/jeecgboot-vue3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>Compile</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">pnpm i</span>
<span class="line">npm run build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><h3 id="_6-start-the-image-container-group" tabindex="-1"><a class="header-anchor" href="#_6-start-the-image-container-group"><span>6. Start the image container group</span></a></h3><p>Enter the SyncBoot root path</p><p>Execute docker command</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">docker-compose up -d</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>Docker group started successfully</p><h3 id="_7-accessing-the-system" tabindex="-1"><a class="header-anchor" href="#_7-accessing-the-system"><span>7. Accessing the system</span></a></h3><blockquote><p>Wait for 1 minute, after the MySQL data is initialized, access the system</p></blockquote><ul><li><a href="http://localhost:80" target="_blank" rel="noopener noreferrer">http://localhost:80</a></li></ul>`,36)]))}const d=n(i,[["render",o]]),l=JSON.parse('{"path":"/syncboot/docker/docker-starts-the-frontend-and-backend-with-one-click.html","title":"Docker starts the frontend and backend with one click","lang":"ko-KR","frontmatter":{"order":2},"git":{"updatedTime":1749179241000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":1,"url":"https://github.com/poh"}],"changelog":[{"hash":"a96cbbf1f6c96d0e9d6bafa4174131f10429b849","time":1749179241000,"email":"poh@empasy.com","author":"poh","message":"sync 제품군 추가"}]},"filePathRelative":"syncboot/docker/docker-starts-the-frontend-and-backend-with-one-click.md"}');export{d as comp,l as data};
