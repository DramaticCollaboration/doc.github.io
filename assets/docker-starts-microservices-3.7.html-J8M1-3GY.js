import{_ as t,c as a,a as s,o as n}from"./app-DeddRHAy.js";const r={};function o(i,e){return n(),a("div",null,e[0]||(e[0]=[s(`<h1 id="docker-start-microservice-3-7" tabindex="-1"><a class="header-anchor" href="#docker-start-microservice-3-7"><span>Docker Start Microservice 3.7</span></a></h1><p>The purpose of this article is to start a microservice project through docker</p><blockquote><p>Compatible with versions prior to v3.7.0</p></blockquote><h2 id="docker-starts-the-microservice-background" tabindex="-1"><a class="header-anchor" href="#docker-starts-the-microservice-background"><span>Docker starts the microservice background</span></a></h2><h3 id="_1-download-the-project" tabindex="-1"><a class="header-anchor" href="#_1-download-the-project"><span>1. Download the project</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">git clone https://github.com/jeecgboot/SyncBoot.git</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><h3 id="_2-configure-host" tabindex="-1"><a class="header-anchor" href="#_2-configure-host"><span>2. Configure host</span></a></h3><blockquote><p>This step must be configured, otherwise nacos, database, etc. will not be able to connect.</p></blockquote><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">127.0.0.1 jeecg-boot-mysql</span>
<span class="line">127.0.0.1 jeecg-boot-redis</span>
<span class="line">127.0.0.1 jeecg-boot-nacos</span>
<span class="line">127.0.0.1 jeecg-boot-system</span>
<span class="line">127.0.0.1 jeecg-boot-gateway</span>
<span class="line">127.0.0.1 jeecg-boot-sentinel</span>
<span class="line">127.0.0.1 jeecg-boot-xxljob</span>
<span class="line">127.0.0.1 jeecg-boot-rabbitmq</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">//注意： 如果本地安装了mysql和redis,启动容器前先停掉本地服务，不然会端口冲突。</span>
<span class="line"> net stop redis</span>
<span class="line"> net stop mysql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>copy</p><p>You can use the tool <a href="https://download.csdn.net/download/zhangdaiscott/88918530" target="_blank" rel="noopener noreferrer">SwitchHosts</a> to quickly configure the host.</p><h3 id="_3-compile-the-background-project" tabindex="-1"><a class="header-anchor" href="#_3-compile-the-background-project"><span>3. Compile the background project</span></a></h3><p>Enter the jeecg-boot root directory</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">cd SyncBoot/jeecg-boot</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>Execute the packaging command</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">mvn clean install -Pdev,SpringCloud</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>See the execution succeeded</p><h3 id="_4-create-mysql-and-redis-containers" tabindex="-1"><a class="header-anchor" href="#_4-create-mysql-and-redis-containers"><span>4. Create mysql and redis containers</span></a></h3><p>Enter the jeecg-server-cloud root directory</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">cd  jeecg-server-cloud</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>Execute the following command to let docker-compose-base.yml create mysql and redis containers</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">docker-compose -f docker-compose-base.yml up -d</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>Container generation results</p><h3 id="_5-create-a-microservice-module-container-group" tabindex="-1"><a class="header-anchor" href="#_5-create-a-microservice-module-container-group"><span>5. Create a microservice module container group</span></a></h3><p>Wait for 1 minute for MySQL to initialize, and then execute the command to create a container group.</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">docker-compose up -d</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>copy</p><p>Container generation results:</p><h3 id="_6-access-the-gateway-interface-address" tabindex="-1"><a class="header-anchor" href="#_6-access-the-gateway-interface-address"><span>6. Access the gateway interface address</span></a></h3><p>Wait for 1 minute until all services are started and access the following address</p><p><a href="http://localhost:9999" target="_blank" rel="noopener noreferrer">http://localhost:9999</a></p><p>Seeing the swagger interface document indicates that the microservice has been successfully started</p><p>Other service addresses:</p><table><thead><tr><th>Serve</th><th>address</th></tr></thead><tbody><tr><td>nacos address (account password: nacos/nacos)</td><td><a href="http://localhost:8848/nacos" target="_blank" rel="noopener noreferrer">http://localhost:8848/nacos</a></td></tr></tbody></table><h2 id="description-of-other-microservice-components" tabindex="-1"><a class="header-anchor" href="#description-of-other-microservice-components"><span>Description of other microservice components</span></a></h2><blockquote><p>By default, xxljob and mq images are not generated. Please open the corresponding comments if necessary.</p></blockquote><p>Other service test addresses</p><table><thead><tr><th>software service</th><th>Test Address</th><th>account password</th><th>Is it necessary</th></tr></thead><tbody><tr><td>nacos (service registration discovery and unified configuration center)</td><td><a href="http://localhost:8848/nacos" target="_blank" rel="noopener noreferrer">http://localhost:8848/nacos</a></td><td>nacos/nacos</td><td>yes</td></tr><tr><td>rabitmq (message middleware)</td><td><a href="http://localhost:15672" target="_blank" rel="noopener noreferrer">http://localhost:15672</a></td><td>guest/guest</td><td>no</td></tr><tr><td>xxl-job-admin (distributed scheduled tasks)</td><td><a href="http://localhost:9080/xxl-job-admin" target="_blank" rel="noopener noreferrer">http://localhost:9080/xxl-job-admin</a></td><td>admin/123456</td><td>no</td></tr><tr><td>Sentinel (Sentinel monitoring)</td><td><a href="http://localhost:9000" target="_blank" rel="noopener noreferrer">http://localhost:9000</a></td><td>sentinel/sentinel</td><td>no</td></tr></tbody></table>`,45)]))}const d=t(r,[["render",o]]),l=JSON.parse('{"path":"/syncboot/docker/docker-starts-microservices-3.7.html","title":"Docker Start Microservice 3.7","lang":"ko-KR","frontmatter":{"order":7},"git":{"updatedTime":1749180812000,"contributors":[{"name":"poh","username":"poh","email":"poh@empasy.com","commits":2,"url":"https://github.com/poh"}],"changelog":[{"hash":"20b98cdb6387988697c03a19f00e0a40c0f2e492","time":1749180812000,"email":"poh@empasy.com","author":"poh","message":"이미지 오류 수정"},{"hash":"a96cbbf1f6c96d0e9d6bafa4174131f10429b849","time":1749179241000,"email":"poh@empasy.com","author":"poh","message":"sync 제품군 추가"}]},"filePathRelative":"syncboot/docker/docker-starts-microservices-3.7.md"}');export{d as comp,l as data};
